{"version":3,"sources":["webpack:///build.d1e2ea8e267d1e33c3e6.js","webpack:///webpack/bootstrap d2634cf966bb28c11592","webpack:///./desktop/js/static/app.js","webpack:///./desktop/js/static/load-video.js","webpack:///./desktop/js/static/desktop.js","webpack:///./desktop/js/static/top-panel.js","webpack:///./desktop/js/static/main-player.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","loadVideo","desktop","topPanel","mainPlayer","$","document","ready","tvLab","loadVideoOnPage","VideoId","css","ajax","success","response","html","hide","fadeIn","setTimeout","data","cache","done","tags_arr","nowTags","split","each","index","value","addClass","iframe","querySelector","Vimeo","Player","playPauseBt","on","event","preventDefault","getPaused","then","paused","play","pause","catch","error","console","log","playPauseSwitch","paused_state","removeClass","autoPlayState","setAutoPlayUI","setLoop","loop","cookie","videoGoAndPlay","getCuePoints","cuePoints","length","removeCuePoint","id","getDuration","duration","equalPart","Math","floor","parseInt","videoCuePointsForDemo","videoCuePoints","time","ShotTag","ShotName","mins","toString","secs","timecode","cuePointsIdList","push","addCuePoint","nearestCuePoint","nearestIndex","nextCuePoint","nextCuePointIndex","prevCuePoint","prevCuePointIndex","thisIndex","absDiffArr","KeyShotsDiv","KeyShotsNameDiv","buttonNextShot","this","getCurrentTime","currentTime","abs","indexOfMin","eq","setCurrentTime","second","LoadVideoShotSwitch","buttonPrevShot","append","keyShot","msToTime","milliseconds","seconds","minutes","ceil","hasClass","nextFrame","videoDuration","sInc","parseFloat","toFixed","prevFrame","nowVid","checkAlert","text","alert","arr","min","minIndex","isEmpty","str","dropTypeOnClick","val","submit","resetSet","tag","tagit","urlVideo","param","url","nowUrl","Rgx","match","newUrl","replace","window","history","pushState","Rslt","loadVideoOnClick","thisObj","parent","TagText","fadeOut","remove","target","accordion","collapsible","active","menuState","heightStyle","create","ui","activate","tagMenuActive","waterfall","itemCls","fitWidth","colWidth","gutterWidth","gutterHeight","align","minCol","maxCol","debug","checkImagesLoaded","callbacks","loadingFinished","$loading","isBeyondMaxPage","undefined","renderData","dataType","pages","page","FirstVideo","tpl","Handlebars","compile","path","mQ","screwDefaultButtons","image","width","height","nowSet","mqSetSubmit","checked","is","sampleTags","showAutocompleteOnFocus","autocomplete","delay","minLength","tagLimit","availableTags","singleField","singleFieldNode","afterTagRemoved","evt","itemName","fieldName","eventTags","addEvent","beforeTagAdded","duringInitialization","afterTagAdded","beforeTagRemoved","onTagClicked","onTagExists","existingTag","readOnly","allowSpaces","removeConfirmation","type","AutoPlayButton","state","this_Vid_Obj","first_Vid_Obj","children","first","next_Vid_Obj","next","prev_Vid_Obj","prev","next_Vid_Id","prev_Vid_Id"],"mappings":"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","file":"build.d1e2ea8e267d1e33c3e6.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nconst loadVideo = __webpack_require__(1);\r\nconst desktop = __webpack_require__(2);\r\nconst topPanel = __webpack_require__(3);\r\nconst mainPlayer = __webpack_require__(4);\r\n\r\nloadVideo();\r\ndesktop();\r\ntopPanel();\r\nmainPlayer();\r\n\r\n// module.exports.tester = tester;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\r\n//------------------------------------------------------------------------------------\r\n// Async Display Video On page + build show video module\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        tvLab.loadVideoOnPage = function (VideoId) {\r\n            'use strict';\r\n\r\n            // set the background gif\r\n            $('div#preview-window').css('background-image', 'url(_global/img/loader_0.gif)');\r\n\r\n            $.ajax('desktop/ajax/video.php', {\r\n                success: function (response) {\r\n\r\n                    // $('#preview-window').hide().fadeIn(150);\r\n\r\n                    $('#preview-window').html('<div class=\"box\">' +\r\n                        '<iframe src=\"//player.vimeo.com/video/' + VideoId +\r\n                        '?title=0&byline=0&portrait=0&autoplay=1\"  frameborder=\"0\" ' +\r\n                        'webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\r\n                        '</iframe></div>')\r\n                        // .load(function (e) {\r\n                        // $(this).contents().find('body').addClass('Z');})\r\n                    ;\r\n\r\n                    $('#video-info').hide().html(response).fadeIn(100);\r\n\r\n                    // remove background image\r\n                    setTimeout(function () {\r\n                        $('div#preview-window').css('background-image', 'none');\r\n                    }, 1000);\r\n                },\r\n                data: {\"VideoId\": VideoId},\r\n                cache: false\r\n\r\n            }).done(function () {\r\n\r\n                //-------- When Ajax Video Loaded\r\n                // This will fire when video loaded\r\n\r\n                // Highlight tags\r\n                var tags_arr = tvLab.nowTags.split(' ');\r\n                $.each(tags_arr, function (index, value) {\r\n                    $('a.tag[data-tag=' + value + ']').addClass(\"here\");\r\n                });\r\n\r\n                // Play-Pause of top panel player\r\n                var iframe = document.querySelector('iframe');\r\n                var mainPlayer = new Vimeo.Player(iframe);\r\n                var playPauseBt = $(\"div#MPC div#PlayPause\");\r\n                var init = mainPlayer; // initialization of mainPlayer object, which is inactive till first usage\r\n\r\n                // Time code result: playback is jumpy, no way to make decent time code\r\n                /*        mainPlayer.on('timeupdate', function(data) {\r\n                 console.log(data.seconds);\r\n                 $('div.timecode').html(\"000\" + data.seconds);\r\n                 });*/\r\n\r\n                // Set On PlayPause Button Event\r\n                $(document).on('click', 'div#MPC div#PlayPause', function (event) {\r\n                    event.preventDefault();\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        if (paused === true) {\r\n                            mainPlayer.play();\r\n                        } else {\r\n                            mainPlayer.pause();\r\n                        }\r\n                    }).catch(function (error) {  // an error occurred\r\n                        console.log(\"an error occurred during on('click') mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                //------ Player play/pause Actions\r\n                var playPauseSwitch = function (paused_state) {\r\n                    if (paused_state === true) {\r\n                        // Pause was ON, switch to play\r\n                        playPauseBt.removeClass(\"pause\");\r\n                        playPauseBt.addClass(\"play\");\r\n                        //console.log(\"Pause was ON. Show Play Button\");\r\n                    } else {\r\n                        // Pause was OFF, turn it on\r\n                        playPauseBt.removeClass(\"play\");\r\n                        playPauseBt.addClass(\"pause\");\r\n                        //console.log(\"Pause was OFF. Show Pause Button\");\r\n                    }\r\n                }\r\n\r\n                mainPlayer.on('play', function (data) {\r\n                    // data is an object containing properties specific to that event (play data: duration, percent, seconds)\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                mainPlayer.on('pause', function (data) {\r\n                    // data is an object containing properties specific to that event\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                // Init AutoPlay param and UI by getting tvLab.autoPlayState from cookie (php-cookie-pipe).\r\n                if (tvLab.autoPlayState === 1) {\r\n                    tvLab.setAutoPlayUI(\"Next\");\r\n                    mainPlayer.setLoop(false);\r\n                    //console.log(\"init tvLab.autoPlayState == 1\");\r\n                } else {\r\n                    tvLab.setAutoPlayUI(\"Cycle\");\r\n                    mainPlayer.setLoop(true);\r\n                    //console.log(\"init tvLab.autoPlayState == 0\");\r\n                }\r\n\r\n\r\n                //------ Auto Next Play Button\r\n                // AutoPlay button on.click Actions\r\n                $(document).on('click', 'div#MPC div.AutoPlay', function (event) {\r\n                    event.preventDefault();\r\n                    if (tvLab.autoPlayState === 1) {\r\n                        // If tvLab.autoPlayState toggle was ON, then switch this back to 0, Cycle\r\n                        mainPlayer.setLoop(true).then(function (loop) { // Set player loop on\r\n                            tvLab.setAutoPlayUI(\"Cycle\"); // Change UI\r\n                            tvLab.autoPlayState = 0; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    } else {\r\n                        // If tvLab.autoPlayState toggle is ON, then switch this to Cycle\r\n                        mainPlayer.setLoop(false).then(function (loop) { // Set player loop off\r\n                            tvLab.setAutoPlayUI(\"Next\"); // Change UI\r\n                            tvLab.autoPlayState = 1; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop off, autoplay on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    }\r\n                });\r\n\r\n                //------ Auto Next Play Video Functionality\r\n                mainPlayer.on('ended', function (data) { // This event fires only if loop is off\r\n                    // data is an object containing properties specific to that event\r\n                    tvLab.videoGoAndPlay(\"Next\");\r\n                });\r\n\r\n\r\n                //------ CuePoints Prev/Next init\r\n\r\n                // 1. Get all CuePoints for video\r\n                //console.log('1. Get all CuePoints for video.');\r\n                mainPlayer.getCuePoints().then(function (cuePoints) {\r\n                    //console.log('Primary collection getCuePoints() worked fine: ');\r\n                    // console.log(cuePoints);\r\n\r\n                    // 2. Delete all existing CuePoints for loaded media\r\n                    if (cuePoints.length > 0) {\r\n                        // console.log('Some CuePoints already exist for loaded media.');\r\n                        // console.log('Deleting all existing CuePoints for loaded media');\r\n                        for (var i = 0; i < cuePoints.length; i++) {\r\n\r\n                            mainPlayer.removeCuePoint(cuePoints[i].id).then(function (id) { // cuePoints = an array of cue point objects\r\n                                // console.log('cue point ' + id + ' was removed successfully: ');\r\n                            }).catch(function (error) {\r\n                                switch (error.name) {\r\n                                    case 'UnsupportedError':\r\n                                        console.log('cue points are not supported with the current player or browser');\r\n                                        break;\r\n                                    case 'InvalidCuePoint':\r\n                                        console.log('a cue point with the id passed wasn’t found');\r\n                                        break;\r\n                                    default:\r\n                                        console.log('some other error occurred');\r\n                                        break;\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        //console.log('No CuePoints found for loaded media.');\r\n                    }\r\n\r\n                }).catch(function (error) { // catch for mainPlayer.getCuePoints()\r\n                    switch (error.name) {\r\n                        case 'UnsupportedError':\r\n                            console.log('cue points are not supported with the current player or browser');\r\n                            break;\r\n                        default:\r\n                            console.log('some other error occurred during mainPlayer.getCuePoints()');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n\r\n                // ------------------------------------------------\r\n                // 3. Assign all CuePoints in cycle for loaded media (add CuePoints for current video) from DB data\r\n\r\n                mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                    // this getDuration callback need to calculate time point for test demo\r\n                    // and it will be replaced by 'DB CuePoints data' callback\r\n\r\n                    var equalPart = Math.floor(parseInt(duration) / 5);\r\n                    var videoCuePointsForDemo = [1, equalPart * 2, equalPart * 3, equalPart * 4, duration - 1];\r\n\r\n                    // console.log('videoCuePointsForDemo: '+videoCuePointsForDemo);\r\n\r\n                    // temp data object\r\n                    var videoCuePoints = [\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[0],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"KeyShot-1\",\r\n                                \"ShotName\": \"First key shot looks nice.\" // this is \"customKey\": \"customValue\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[1],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"ShotTag\",\r\n                                \"ShotName\": \"This one not bad too!\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-1\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[2],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CustomTag\",\r\n                                \"ShotName\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-2\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[3],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CoolTag\",\r\n                                \"ShotName\": \"Composition and color are worth to checkout.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-3\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[4],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"LastKeyShot\",\r\n                                \"ShotName\": \"Well, this is just last key shot in this cue.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        }\r\n                    ];\r\n\r\n                    // Adding timecode formatted time\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n\r\n                        var mins = Math.floor(videoCuePoints[i].time / 60 % 60).toString();\r\n                        var secs = Math.floor(videoCuePoints[i].time % 60).toString();\r\n\r\n                        if (mins.length < 2) {\r\n                            mins = '0' + mins;\r\n                        }\r\n\r\n                        if (secs.length < 2) {\r\n                            secs = '0' + secs;\r\n                        }\r\n\r\n                        videoCuePoints[i].timecode = mins + ':' + secs;\r\n                    }\r\n\r\n                    // Debug timecode list\r\n                    /*for (i = 0; i < videoCuePoints.length; i++) {\r\n                     console.log(videoCuePoints[i].timecode);\r\n                     }*/\r\n\r\n\r\n                    // Make short version of data set\r\n                    var cuePointsIdList = [];\r\n                    for (var i = 0; i < videoCuePoints.length; i++) {\r\n                        cuePointsIdList.push(videoCuePoints[i].time);\r\n                    }\r\n\r\n                    //  Add videoCuePoints items from data set to video player\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        // console.log('----- begin extraction of new videoCuePoints item ' + i + ' ... ');\r\n\r\n                        mainPlayer.addCuePoint(videoCuePoints[i].time, videoCuePoints[i].data).then(function (id) {\r\n                            //console.log('cue point ' + i + ' was added successfully with id: ' + id);\r\n\r\n                        });\r\n                    }\r\n\r\n                    // 4. Get all CuePoints again\r\n                    mainPlayer.getCuePoints().then(function (videoCuePoints) {\r\n                        // 5. Make CuePoints Listener action (for visual indicating).\r\n                        if (videoCuePoints.length > 0) {\r\n                            //console.log('There is some final videoCuePoints in object.');\r\n                        } else {\r\n                            //console.log('Final videoCuePoints not found in object.');\r\n                        }\r\n                    });\r\n\r\n                    var nearestCuePoint = 0,\r\n                        nearestIndex = 0,\r\n                        nextCuePoint = 0,\r\n                        nextCuePointIndex = 0,\r\n                        prevCuePoint = 0,\r\n                        prevCuePointIndex = 0,\r\n                        thisIndex = 0,\r\n                        absDiffArr = [];\r\n\r\n                    var KeyShotsDiv = 'div#video-info > .left > div.KeyShots > ul';\r\n                    var KeyShotsNameDiv = 'div#video-info > .left > div.KeyShots > div.ShotName > span';\r\n\r\n                    // div#NextShot controller\r\n                    $(document).on('click', 'div#MPC div#NextShot', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        var buttonNextShot = $(this);\r\n                        buttonNextShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct nextCuePoint.\r\n                            if (currentTime * 1000 >= nearestCuePoint * 1000) {\r\n                                nextCuePointIndex = nearestIndex + 1; // just NEXT item in array\r\n\r\n                                // if we pass the nearest point, next point will be just NEXT item in array\r\n                                if (nextCuePointIndex >= videoCuePoints.length) { // But. If this index went beyond array,\r\n                                    nextCuePoint = videoCuePoints[0]; // then return to first cuePoint\r\n                                    thisIndex = 0;\r\n                                } else {\r\n                                    nextCuePoint = videoCuePoints[nextCuePointIndex];\r\n                                    thisIndex = nextCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                nextCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current nextCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(nextCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonNextShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(nextCuePoint);\r\n                                //console.log('Set time by div#NextShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n                    // div#PrevShot controller\r\n                    $(document).on('click', 'div#MPC div#PrevShot', function (event) {\r\n                        event.preventDefault();\r\n                        var buttonPrevShot = $(this);\r\n                        buttonPrevShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct prevCuePoint.\r\n                            if (currentTime * 1000 <= nearestCuePoint * 1000 + 1000) { // add additional delay for back clicking\r\n                                prevCuePointIndex = nearestIndex - 1;\r\n\r\n                                // if we pass the nearest point, prev point will be just prev item in array\r\n                                if (prevCuePointIndex < 0) { // But. If this index went beyond array, then return to last cuePoint in array\r\n                                    prevCuePointIndex = videoCuePoints.length - 1;\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                } else {\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                prevCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current prevCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(prevCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonPrevShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(prevCuePoint);\r\n                                // console.log('Set time by div#PrevShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Set the first ShotName in videoCuePoints and set all the LI\r\n                    $(KeyShotsNameDiv).html('<span style=\"color:#878787;\">' + videoCuePoints.length + ' shot points...</span>');\r\n                    // $('div#video-info > .left > div.KeyShots > div.ShotName').hide();\r\n\r\n                    // Set the LI elements\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        $(KeyShotsDiv).append('<li data-time=\"' + videoCuePoints[i].time + '\">' + videoCuePoints[i].data.ShotTag + '</li>');\r\n                    }\r\n\r\n                    var LoadVideoShotSwitch = function (keyShot) { // keyShot = object by numerical order from videoCuePoints data set\r\n                        // Write Shot Name in state text block\r\n                        // remove old .here\r\n                        $(KeyShotsDiv + ' > li.here').removeClass(\"here\");\r\n                        // set new .here and delete .load\r\n                        $(KeyShotsDiv + ' > li[data-time=' + keyShot.time + ']').removeClass(\"load\").addClass(\"here\");\r\n                        // $(KeyShotsNameDiv).hide().fadeIn(400).text(keyShot.data.ShotName);\r\n                    }\r\n\r\n                    // Controller to key shots link list\r\n                    $(document).on('click', KeyShotsDiv + ' > li', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        //if (!$( this ).hasClass( \"here\" )){ // don't do on .here class\r\n                        var keyShot = videoCuePoints[$(this).index()]; // object by numerical order from videoCuePoints data set\r\n                        // Start load the Cue Point\r\n                        $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                        $(this).addClass('load');\r\n                        // $(KeyShotsNameDiv).text('loading...');\r\n                        // Jump to ney key shot\r\n                        mainPlayer.setCurrentTime(keyShot.time).then(function (second) {\r\n                            LoadVideoShotSwitch(keyShot);\r\n                        });\r\n                        //}\r\n                    });\r\n\r\n                    // convert milliseconds to timecode\r\n                    var msToTime = function (duration) {\r\n                        var milliseconds = parseInt((duration % 1000) / 10) // parseInt\r\n                            , seconds = parseInt((duration / 1000) % 60) // parseInt\r\n                            , minutes = parseInt((duration / (1000 * 60)) % 60); // parseInt\r\n                        /*, hours = parseInt((duration/(1000*60*60))%24);*/\r\n\r\n                        /*hours = (hours < 10) ? '0' + hours : hours;*/\r\n                        minutes = (minutes < 10) ? '0' + minutes : minutes;\r\n                        seconds = (seconds < 10) ? '0' + seconds : seconds;\r\n                        milliseconds = (milliseconds < 10) ? '0' + milliseconds : milliseconds;\r\n\r\n                        return /*hours + ':' + */'<span class=\"prevFrame\"></span> ' + minutes + ':' + seconds + '<span>:' + milliseconds + ' </span><span class=\"nextFrame\"></span>';\r\n                    }\r\n\r\n                    // Time update + current que point recognition\r\n                    mainPlayer.on('timeupdate', function (data) {\r\n\r\n                        var seconds = data.seconds;\r\n                        if (seconds < 0.2) {\r\n                            seconds = 0.1;\r\n                        }\r\n                        // Refresh timecode\r\n                        // var timecode = msToTime(data.seconds * 1000); // get current time and convert to proper ms\r\n                        var timecode = msToTime(Math.ceil(seconds * 10) * 100); // get current time and convert to proper ms\r\n                        $('div.TimeCode').html(timecode); // put recalculated timecode to DOM\r\n\r\n                        // Looking for match each event in entire object of CuePoints\r\n                        for (i = 0; i < videoCuePoints.length; i++) {\r\n                            if (videoCuePoints[i].time >= data.seconds - 0 && videoCuePoints[i].time <= data.seconds + .8) {\r\n                                //console.log(\"!We got match on key \" + videoCuePoints[i].time);\r\n\r\n                                // Check the presence of .here in current li [data-time]\r\n                                if ($(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').hasClass(\"here\")) {\r\n                                    // already has .here, do nothing\r\n                                } else {\r\n                                    $(KeyShotsDiv + ' > li').removeClass(\"here\"); // delete .here from all others\r\n                                    $(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').addClass(\"here\"); // add .here\r\n                                    $(KeyShotsNameDiv).hide().fadeIn(200).html('<span style=\"color:#899ebb;\">' + videoCuePoints[i].timecode + '</span><div class=\"keyShot\"></div>' + videoCuePoints[i].data.ShotName); // load caption\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n                // prevFrame/nextFrame buttons\r\n                //---------------------------------------------------\r\n                // looks like Vimeo.Player() can't hold values below 0.1s\r\n                // object can give and accept only seconds starts from 0.11s\r\n                // which timecode interprets as 00:00:02 and duplicates this with true 00:00:02\r\n                // We also have autoplay cycle problem, which starts video from the beginning at near of the end\r\n\r\n                // set on nextFrame button\r\n                var nextFrame = 'div#video-info span.nextFrame';\r\n                $(document).on('click', nextFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds < 0.11) { // this is hack to convert all unsupported results by player < 1.1 values to 0.2 and adjust current time to the same round value\r\n                            mainPlayer.pause(); // init pause first time for further condition\r\n                            mainPlayer.setCurrentTime(0.11); // looks like Vimeo.Player(iframe); can't hold below 0.1s\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n\r\n                            // This duration end will be use to define when to stop iterate nextFrame button\r\n                            var videoDuration = 0.0;\r\n                            mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                                videoDuration = duration;\r\n                                // console.log('videoDuration init is ' + duration);\r\n                            });\r\n\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n                                    var sInc = (parseFloat(seconds.toFixed(1)) + 0.1).toFixed(1);\r\n\r\n                                    // console.log('----------');\r\n                                    // console.log('Seconds init as ' + seconds);\r\n                                    // console.log('sInc is ' + sInc);\r\n                                    // console.log('videoDuration is ' + videoDuration);\r\n\r\n                                    if (seconds < videoDuration - 0.7) { // this will make sure to make action and show load class only if we not reached end of the video (AND BEFORE AUTO PLAY STARTS)\r\n                                        $(nextFrame).addClass(\"loading\");\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    }\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // set on prevFrame button\r\n                var prevFrame = 'div#video-info span.prevFrame';\r\n                $(document).on('click', prevFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds <= 0.11) { // this is hack to prevent zero result that duplicates others < 1.1 values (unsupported by player) (those looks the same for timecode)\r\n                            return true;\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n\r\n                                    if (seconds > 0.2) { // this is hack to prevent subtraction that result unsupported < 1.1 values by player\r\n                                        $(prevFrame).addClass(\"loading\");\r\n                                        var sInc = (parseFloat(seconds.toFixed(1)) - 0.1).toFixed(1);\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    } else {\r\n                                        mainPlayer.setCurrentTime(0.11); // return to default working minimal value\r\n                                    }\r\n                                    // console.log('Result as ' + seconds);\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        };\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\r\n//------------------------------------------------------------------------------------\r\n// Desktop. General\r\nmodule.exports = function() {\r\n\r\n    $(document).ready(function () {\r\n\r\n        tvLab.nowVid ? tvLab.loadVideoOnPage(tvLab.nowVid) : null;\r\n\r\n        tvLab.checkAlert = function (text) {\r\n            alert(text);\r\n        };\r\n\r\n        tvLab.indexOfMin = function (arr) {\r\n            if (arr.length === 0) {\r\n                return -1; // this will return on empty array\r\n            }\r\n\r\n            var min = arr[0];\r\n            var minIndex = 0;\r\n\r\n            for (var i = 1; i < arr.length; i++) {\r\n                if (arr[i] < min) {\r\n                    minIndex = i;\r\n                    min = arr[i];\r\n                }\r\n            }\r\n\r\n            return minIndex;\r\n        };\r\n\r\n        tvLab.isEmpty = function (str) {\r\n            return ( !str || 0 === str.length );\r\n        };\r\n\r\n        tvLab.dropTypeOnClick = function () {\r\n            // Drops filters state and reloads\r\n            $('input#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.resetSet = function (tag) {\r\n            // Drops filters state, reloads, select new tag\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.urlVideo = function (param) {\r\n            // Select new video input param\r\n\r\n            var url = tvLab.nowUrl;\r\n            var Rgx = /(video=)(\\d*)/;\r\n\r\n            if (typeof param !== 'undefined') {\r\n\r\n                if (!url.match(Rgx)) {\r\n                    url = url + '&' + \"video=\" + param;\r\n                }\r\n\r\n                var newUrl = url.replace(Rgx, \"$1\" + param);\r\n                window.history.pushState(\"\", \"\", \"?\" + newUrl);\r\n                tvLab.nowUrl = newUrl;\r\n                return newUrl;\r\n\r\n            } else {\r\n\r\n                //--Shows URLs video param\r\n                var Rslt = \"\";\r\n                if (Rslt = url.match(Rgx)) {\r\n                    if (!tvLab.isEmpty(Rslt[2])) {\r\n                        return Rslt[2];\r\n                    } else {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        tvLab.loadVideoOnClick = function (id, thisObj) {\r\n            // Load Video On Click + some actions on this event\r\n            // Update Video Input param\r\n            tvLab.urlVideo(id);\r\n\r\n            // Update Video Input param\r\n            $('input#InputVideo').val(id);\r\n\r\n            // Update Logo Button\r\n            //$('.tpLogo').html('<a href=\"?video=' + id + '\"></a>');\r\n\r\n            // Update Item Box Here class\r\n            $(\"div.item.here\").removeClass(\"here\");\r\n            $(thisObj).parent().parent().addClass(\"here\");\r\n\r\n            //Load Video\r\n            tvLab.loadVideoOnPage(id);\r\n        };\r\n\r\n        /**\r\n         * Video display Tag here highlight when entire document ready */\r\n\r\n        var tags_arr = tvLab.nowTags.split(' ');\r\n        $.each(tags_arr, function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        /**\r\n         * AdjustH1InfoOutput Line */\r\n        //-- Remove tag on x click\r\n        $(\"div#main-output > h1.state-info > span.Tags > span.tag span.x-close\")\r\n            .on(\"click\", function (event) {\r\n\r\n                // Recognize tag text\r\n                var TagText = $(this).parent().text();\r\n                TagText = TagText.replace(\"⨯\", \"\");\r\n                TagText = TagText.replace(\"# \", \"\");\r\n\r\n                // Remove tag\r\n                $(\"ul.top-panel__search-field\").tagit(\"removeTagByLabel\", TagText);\r\n\r\n                // Remove div tag\r\n                $(this).parent().fadeOut(200, function () {\r\n                    TagText.remove();\r\n                });\r\n                // Submit with delay\r\n                setTimeout(function () {\r\n                    $('#top-panel__search').submit();\r\n                }, 100);\r\n            });\r\n\r\n\r\n        /**\r\n         * Video display tag click event */\r\n\r\n        $(document).on('click', 'a.tag', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n        // Tags overview Tag click event\r\n        $(document).on('click', 'a.tag-item', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            // $('input#InputVideo').val(\"\"); // Drop displayed video to \"\"\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n\r\n        /**\r\n         *  Accordion Left Panel with Tags overview\r\n         *  Tag \"here\" highlighted with entire document */\r\n\r\n        $.each(tvLab.nowTags.split(' '), function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        // tvLab.menuState = 3; // is works\r\n        // let menuState = document.cookie[document.cookie.length-1];\r\n        // COOKIE NOT WORKING WITH ACCORDION\r\n\r\n        $(\"aside#left-panel div.accordion\").accordion({\r\n            collapsible: true,\r\n            active: tvLab.menuState,\r\n            heightStyle: \"content\",\r\n\r\n            create: function (event, ui) {\r\n                $('aside#left-panel div.accordion').css(\"display\", \"block\");\r\n                // console.log('accordion create: '+ $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\"), tvLab.menuState);\r\n            },\r\n\r\n            activate: function (event, ui) {\r\n                var tagMenuActive = $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\");\r\n                document.cookie = \"TagMenuState=\" + tagMenuActive;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        $('#container').waterfall({\r\n            itemCls: 'item',\r\n            fitWidth: false,\r\n            colWidth: 319,\r\n            gutterWidth: 19,\r\n            gutterHeight: 15,\r\n            align: 'center',\r\n            minCol: 1,\r\n            maxCol: 3,\r\n            debug: false,\r\n            checkImagesLoaded: false,\r\n            callbacks: {\r\n\r\n                loadingFinished: function ($loading, isBeyondMaxPage) {\r\n\r\n                    !isBeyondMaxPage ? $loading.fadeOut() : $loading.remove();\r\n\r\n                    //-- Check for not selected video\r\n                    if (tvLab.urlVideo() === undefined) { // If url video param does not exist\r\n                        if ($(\".waterfall-container .item.here\").length === 0) { // if .box.here does not exist too\r\n                            $(\".waterfall-container .item:first-child\").addClass(\"here\"); // add class to first one\r\n                        }\r\n                    }\r\n\r\n                    $(document).on('click', '.waterfall-container a.wf-load-video', function (event) {\r\n                        event.preventDefault();\r\n                        tvLab.loadVideoOnClick($(this).data('id'), $(this));\r\n                    });\r\n\r\n                },\r\n                renderData: function (data, dataType) {\r\n\r\n                    if (data.pages === data.page) {\r\n                        $('#container').waterfall('pause', function () {\r\n                            $('#waterfall-message').html('<!--No more result from database-->')\r\n                        });\r\n                    }\r\n\r\n                    if (!tvLab.nowVid) {\r\n                        if (data.page === 1) {\r\n                            tvLab.loadVideoOnPage( data.FirstVideo );\r\n                        }\r\n                    }\r\n\r\n                    if (dataType === 'json' || dataType === 'jsonp') {\r\n                        // json or jsonp format\r\n                        var tpl = $('#waterfall-tpl').html();\r\n                        var template = Handlebars.compile(tpl);\r\n                        return template(data);\r\n                    } else {\r\n                        // html format\r\n                        return data;\r\n                    }\r\n\r\n                }\r\n            },\r\n            path: function (page) {\r\n                return 'desktop/json/waterfall_page.php?'+tvLab.nowUrl+'&page=' + page;\r\n            }\r\n        });\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\r\n//------------------------------------------------------------------------------------\r\n// Top panel\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Filter Buttons Assemble\r\n\r\n        var mQ;\r\n\r\n        // screw-default-buttons init\r\n        $('input:radio').screwDefaultButtons({\r\n            image: 'url(\"img/radioSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        $('input:checkbox').screwDefaultButtons({\r\n            image: 'url(\"img/checkboxSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        // Hide before build completely\r\n        $('.top-panel__search-filters_fixwrap').css(\"display\", \"block\");\r\n\r\n        // Sync with php passed url 'set code'\r\n        tvLab.nowSet.match(/[\\d\\w]{12}/) ? mQ = tvLab.nowSet : mQ = \"c0d0s0a0t0v0\";\r\n\r\n        // Shorthand for submit\r\n        tvLab.mqSetSubmit = function () {\r\n            $('#set').val(mQ);\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        // Check the 'chk' in form, if so -- changing filter code mQ\r\n        $('#comp')[0].checked === true ? mQ = mQ.replace(/c0/, 'c1') : null;\r\n        $('#3d')[0].checked === true ? mQ = mQ.replace(/d0/, 'd1') : null;\r\n        $('#sim')[0].checked === true ? mQ = mQ.replace(/s0/, 's1') : null;\r\n        $('#anim')[0].checked === true ? mQ = mQ.replace(/a0/, 'a1') : null;\r\n        $('#stpm')[0].checked === true ? mQ = mQ.replace(/t0/, 't1') : null;\r\n        $('#vid')[0].checked === true ? mQ = mQ.replace(/v0/, 'v1') : null;\r\n\r\n        // Event Callbacks\r\n        $('.styledCheckbox:has(#md)').on('click', function () {\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#comp)').on('click', function () {\r\n            if ($('#comp').is(':checked')) {\r\n                if (!mQ.match(/c1/)) {\r\n                    mQ = mQ.replace(/c0/, 'c1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/c0/)) {\r\n                    mQ = mQ.replace(/c1/, 'c0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#3d)').on('click', function () {\r\n            if ($('#3d').is(':checked')) {\r\n                if (!mQ.match(/d1/)) {\r\n                    mQ = mQ.replace(/d0/, 'd1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/d0/)) {\r\n                    mQ = mQ.replace(/d1/, 'd0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#sim)').on('click', function () {\r\n            if ($('#sim').is(':checked')) {\r\n                if (!mQ.match(/s1/)) {\r\n                    mQ = mQ.replace(/s0/, 's1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/s0/)) {\r\n                    mQ = mQ.replace(/s1/, 's0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#anim)').on('click', function () {\r\n            if ($('#anim').is(':checked')) {\r\n                if (!mQ.match(/a1/)) {\r\n                    mQ = mQ.replace(/a0/, 'a1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/a0/)) {\r\n                    mQ = mQ.replace(/a1/, 'a0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#stpm)').on('click', function () {\r\n            if ($('#stpm').is(':checked')) {\r\n                if (!mQ.match(/t1/)) {\r\n                    mQ = mQ.replace(/t0/, 't1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/t0/)) {\r\n                    mQ = mQ.replace(/t1/, 't0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#vid)').on('click', function () {\r\n            if ($('#vid').is(':checked')) {\r\n                if (!mQ.match(/v1/)) {\r\n                    mQ = mQ.replace(/v0/, 'v1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/v0/)) {\r\n                    mQ = mQ.replace(/v1/, 'v0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Tagit auto complete. top panel input area\r\n\r\n        tvLab.sampleTags = ['realism', 'abstract', 'minimalism', 'futurism', 'surrealism', 'contemporary', 'cinematic', 'Cartoon', 'Art', 'Beauty', 'Adventures', 'Story', 'Fantasy', 'Spiritual', 'Culture', 'Sport', 'Games', 'Enertament', 'Mans', 'Womens', 'Comedy', 'Show', 'Cinema', 'Fun', 'Weird', 'News', 'Info', 'Promo', 'Test', 'Science', 'Education', 'History', 'Political', 'Social', 'Nature', 'Health', 'Industry', 'Buisness', 'Finance', 'Services', 'Vehicles', 'Technology', 'Digital', 'CG', 'Crafts', 'War', 'Criminal'];\r\n\r\n        //-------------------------------\r\n        // Single field\r\n        //-------------------------------\r\n        $('ul.top-panel__search-field').tagit({\r\n            showAutocompleteOnFocus: false,\r\n            autocomplete: {delay: 0, minLength: 0},\r\n            tagLimit: 3,\r\n            availableTags: tvLab.sampleTags,\r\n            singleField: true,\r\n            singleFieldNode: $('input.top-panel__search-field'),\r\n            afterTagRemoved: function (evt, ui) {\r\n                //document.getElementById(\"top-panel__search\").submit();\r\n            }\r\n\r\n        });\r\n\r\n        //-------------------------------\r\n        // Preloading data in markup\r\n        //-------------------------------\r\n        $('#myULTags').tagit({\r\n            availableTags: tvLab.sampleTags, // this param is of course optional. it's for autocomplete.\r\n            // configure the name of the input field (will be submitted with form), default: item[tags]\r\n            itemName: 'item',\r\n            fieldName: 'tags'\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag events\r\n        //-------------------------------\r\n        tvLab.eventTags = $('#eventTags');\r\n\r\n        tvLab.addEvent = function (text) {\r\n            $('#events_container').append(text + '<br>');\r\n        };\r\n\r\n        tvLab.eventTags.tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            beforeTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('beforeTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            afterTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('afterTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            beforeTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('beforeTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            afterTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('afterTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagClicked: function (evt, ui) {\r\n                tvLab.addEvent('onTagClicked: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagExists: function (evt, ui) {\r\n                tvLab.addEvent('onTagExists: ' + tvLab.eventTags.tagit('tagLabel', ui.existingTag));\r\n            }\r\n        });\r\n\r\n        //-------------------------------\r\n        // Read-only\r\n        //-------------------------------\r\n        $('#readOnlyTags').tagit({\r\n            readOnly: false\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag-it methods\r\n        //-------------------------------\r\n        $('#methodTags').tagit({\r\n            availableTags: tvLab.sampleTags\r\n        });\r\n\r\n        //-------------------------------\r\n        // Allow spaces without quotes.\r\n        //-------------------------------\r\n        $('#allowSpacesTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            allowSpaces: true\r\n        });\r\n\r\n        //-------------------------------\r\n        // Remove confirmation\r\n        //-------------------------------\r\n        $('#removeConfirmationTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            removeConfirmation: true\r\n        });\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\r\n//------------------------------------------------------------------------------------\r\n// Television Lab Player link with waterfall output grid: prev/next video bond ability\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n        // References for Vimeo Player API\r\n        // https://github.com/vimeo/player.js\r\n\r\n        tvLab.setAutoPlayUI = function (type) { // \"Cycle\" or \"Next\"\r\n            var AutoPlayButton = $(\"div#MPC div.AutoPlay\");\r\n\r\n            if (type === \"Next\") {\r\n                AutoPlayButton.removeClass(\"Cycle\");\r\n                AutoPlayButton.addClass(\"Next\");\r\n            } else if (type === \"Cycle\") {\r\n                AutoPlayButton.removeClass(\"Next\");\r\n                AutoPlayButton.addClass(\"Cycle\");\r\n            }\r\n        };\r\n\r\n        tvLab.videoGoAndPlay = function (state) {\r\n            var this_Vid_Obj = $(\"#container.waterfall-container div.item.here\");\r\n            var first_Vid_Obj = $(\"#container.waterfall-container\").children().first();\r\n            var next_Vid_Obj = this_Vid_Obj.next();\r\n            var prev_Vid_Obj = this_Vid_Obj.prev();\r\n            var next_Vid_Id = next_Vid_Obj.data(\"id\");\r\n            var prev_Vid_Id = prev_Vid_Obj.data(\"id\");\r\n\r\n            if (state === \"Next\") {\r\n                if (typeof next_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    next_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(next_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n\r\n            if (state === \"Prev\") {\r\n                if (typeof prev_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    prev_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(prev_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n        };\r\n\r\n        /* Desktop player listeners extends Main Player */\r\n        $(document).on('click', 'div#MPC div#NextVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Next\");\r\n        });\r\n\r\n        $(document).on('click', 'div#MPC div#PrevVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Prev\");\r\n        });\r\n    });\r\n};\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.d1e2ea8e267d1e33c3e6.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2634cf966bb28c11592","\"use strict\";\r\n\r\nconst loadVideo = require(\"./load-video\");\r\nconst desktop = require(\"./desktop\");\r\nconst topPanel = require(\"./top-panel\");\r\nconst mainPlayer = require(\"./main-player\");\r\n\r\nloadVideo();\r\ndesktop();\r\ntopPanel();\r\nmainPlayer();\r\n\r\n// module.exports.tester = tester;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./desktop/js/static/app.js\n// module id = 0\n// module chunks = 0","\r\n//------------------------------------------------------------------------------------\r\n// Async Display Video On page + build show video module\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        tvLab.loadVideoOnPage = function (VideoId) {\r\n            'use strict';\r\n\r\n            // set the background gif\r\n            $('div#preview-window').css('background-image', 'url(_global/img/loader_0.gif)');\r\n\r\n            $.ajax('desktop/ajax/video.php', {\r\n                success: function (response) {\r\n\r\n                    // $('#preview-window').hide().fadeIn(150);\r\n\r\n                    $('#preview-window').html('<div class=\"box\">' +\r\n                        '<iframe src=\"//player.vimeo.com/video/' + VideoId +\r\n                        '?title=0&byline=0&portrait=0&autoplay=1\"  frameborder=\"0\" ' +\r\n                        'webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\r\n                        '</iframe></div>')\r\n                        // .load(function (e) {\r\n                        // $(this).contents().find('body').addClass('Z');})\r\n                    ;\r\n\r\n                    $('#video-info').hide().html(response).fadeIn(100);\r\n\r\n                    // remove background image\r\n                    setTimeout(function () {\r\n                        $('div#preview-window').css('background-image', 'none');\r\n                    }, 1000);\r\n                },\r\n                data: {\"VideoId\": VideoId},\r\n                cache: false\r\n\r\n            }).done(function () {\r\n\r\n                //-------- When Ajax Video Loaded\r\n                // This will fire when video loaded\r\n\r\n                // Highlight tags\r\n                var tags_arr = tvLab.nowTags.split(' ');\r\n                $.each(tags_arr, function (index, value) {\r\n                    $('a.tag[data-tag=' + value + ']').addClass(\"here\");\r\n                });\r\n\r\n                // Play-Pause of top panel player\r\n                var iframe = document.querySelector('iframe');\r\n                var mainPlayer = new Vimeo.Player(iframe);\r\n                var playPauseBt = $(\"div#MPC div#PlayPause\");\r\n                var init = mainPlayer; // initialization of mainPlayer object, which is inactive till first usage\r\n\r\n                // Time code result: playback is jumpy, no way to make decent time code\r\n                /*        mainPlayer.on('timeupdate', function(data) {\r\n                 console.log(data.seconds);\r\n                 $('div.timecode').html(\"000\" + data.seconds);\r\n                 });*/\r\n\r\n                // Set On PlayPause Button Event\r\n                $(document).on('click', 'div#MPC div#PlayPause', function (event) {\r\n                    event.preventDefault();\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        if (paused === true) {\r\n                            mainPlayer.play();\r\n                        } else {\r\n                            mainPlayer.pause();\r\n                        }\r\n                    }).catch(function (error) {  // an error occurred\r\n                        console.log(\"an error occurred during on('click') mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                //------ Player play/pause Actions\r\n                var playPauseSwitch = function (paused_state) {\r\n                    if (paused_state === true) {\r\n                        // Pause was ON, switch to play\r\n                        playPauseBt.removeClass(\"pause\");\r\n                        playPauseBt.addClass(\"play\");\r\n                        //console.log(\"Pause was ON. Show Play Button\");\r\n                    } else {\r\n                        // Pause was OFF, turn it on\r\n                        playPauseBt.removeClass(\"play\");\r\n                        playPauseBt.addClass(\"pause\");\r\n                        //console.log(\"Pause was OFF. Show Pause Button\");\r\n                    }\r\n                }\r\n\r\n                mainPlayer.on('play', function (data) {\r\n                    // data is an object containing properties specific to that event (play data: duration, percent, seconds)\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                mainPlayer.on('pause', function (data) {\r\n                    // data is an object containing properties specific to that event\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                // Init AutoPlay param and UI by getting tvLab.autoPlayState from cookie (php-cookie-pipe).\r\n                if (tvLab.autoPlayState === 1) {\r\n                    tvLab.setAutoPlayUI(\"Next\");\r\n                    mainPlayer.setLoop(false);\r\n                    //console.log(\"init tvLab.autoPlayState == 1\");\r\n                } else {\r\n                    tvLab.setAutoPlayUI(\"Cycle\");\r\n                    mainPlayer.setLoop(true);\r\n                    //console.log(\"init tvLab.autoPlayState == 0\");\r\n                }\r\n\r\n\r\n                //------ Auto Next Play Button\r\n                // AutoPlay button on.click Actions\r\n                $(document).on('click', 'div#MPC div.AutoPlay', function (event) {\r\n                    event.preventDefault();\r\n                    if (tvLab.autoPlayState === 1) {\r\n                        // If tvLab.autoPlayState toggle was ON, then switch this back to 0, Cycle\r\n                        mainPlayer.setLoop(true).then(function (loop) { // Set player loop on\r\n                            tvLab.setAutoPlayUI(\"Cycle\"); // Change UI\r\n                            tvLab.autoPlayState = 0; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    } else {\r\n                        // If tvLab.autoPlayState toggle is ON, then switch this to Cycle\r\n                        mainPlayer.setLoop(false).then(function (loop) { // Set player loop off\r\n                            tvLab.setAutoPlayUI(\"Next\"); // Change UI\r\n                            tvLab.autoPlayState = 1; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop off, autoplay on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    }\r\n                });\r\n\r\n                //------ Auto Next Play Video Functionality\r\n                mainPlayer.on('ended', function (data) { // This event fires only if loop is off\r\n                    // data is an object containing properties specific to that event\r\n                    tvLab.videoGoAndPlay(\"Next\");\r\n                });\r\n\r\n\r\n                //------ CuePoints Prev/Next init\r\n\r\n                // 1. Get all CuePoints for video\r\n                //console.log('1. Get all CuePoints for video.');\r\n                mainPlayer.getCuePoints().then(function (cuePoints) {\r\n                    //console.log('Primary collection getCuePoints() worked fine: ');\r\n                    // console.log(cuePoints);\r\n\r\n                    // 2. Delete all existing CuePoints for loaded media\r\n                    if (cuePoints.length > 0) {\r\n                        // console.log('Some CuePoints already exist for loaded media.');\r\n                        // console.log('Deleting all existing CuePoints for loaded media');\r\n                        for (var i = 0; i < cuePoints.length; i++) {\r\n\r\n                            mainPlayer.removeCuePoint(cuePoints[i].id).then(function (id) { // cuePoints = an array of cue point objects\r\n                                // console.log('cue point ' + id + ' was removed successfully: ');\r\n                            }).catch(function (error) {\r\n                                switch (error.name) {\r\n                                    case 'UnsupportedError':\r\n                                        console.log('cue points are not supported with the current player or browser');\r\n                                        break;\r\n                                    case 'InvalidCuePoint':\r\n                                        console.log('a cue point with the id passed wasn’t found');\r\n                                        break;\r\n                                    default:\r\n                                        console.log('some other error occurred');\r\n                                        break;\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        //console.log('No CuePoints found for loaded media.');\r\n                    }\r\n\r\n                }).catch(function (error) { // catch for mainPlayer.getCuePoints()\r\n                    switch (error.name) {\r\n                        case 'UnsupportedError':\r\n                            console.log('cue points are not supported with the current player or browser');\r\n                            break;\r\n                        default:\r\n                            console.log('some other error occurred during mainPlayer.getCuePoints()');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n\r\n                // ------------------------------------------------\r\n                // 3. Assign all CuePoints in cycle for loaded media (add CuePoints for current video) from DB data\r\n\r\n                mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                    // this getDuration callback need to calculate time point for test demo\r\n                    // and it will be replaced by 'DB CuePoints data' callback\r\n\r\n                    var equalPart = Math.floor(parseInt(duration) / 5);\r\n                    var videoCuePointsForDemo = [1, equalPart * 2, equalPart * 3, equalPart * 4, duration - 1];\r\n\r\n                    // console.log('videoCuePointsForDemo: '+videoCuePointsForDemo);\r\n\r\n                    // temp data object\r\n                    var videoCuePoints = [\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[0],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"KeyShot-1\",\r\n                                \"ShotName\": \"First key shot looks nice.\" // this is \"customKey\": \"customValue\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[1],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"ShotTag\",\r\n                                \"ShotName\": \"This one not bad too!\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-1\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[2],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CustomTag\",\r\n                                \"ShotName\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-2\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[3],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CoolTag\",\r\n                                \"ShotName\": \"Composition and color are worth to checkout.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-3\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[4],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"LastKeyShot\",\r\n                                \"ShotName\": \"Well, this is just last key shot in this cue.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        }\r\n                    ];\r\n\r\n                    // Adding timecode formatted time\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n\r\n                        var mins = Math.floor(videoCuePoints[i].time / 60 % 60).toString();\r\n                        var secs = Math.floor(videoCuePoints[i].time % 60).toString();\r\n\r\n                        if (mins.length < 2) {\r\n                            mins = '0' + mins;\r\n                        }\r\n\r\n                        if (secs.length < 2) {\r\n                            secs = '0' + secs;\r\n                        }\r\n\r\n                        videoCuePoints[i].timecode = mins + ':' + secs;\r\n                    }\r\n\r\n                    // Debug timecode list\r\n                    /*for (i = 0; i < videoCuePoints.length; i++) {\r\n                     console.log(videoCuePoints[i].timecode);\r\n                     }*/\r\n\r\n\r\n                    // Make short version of data set\r\n                    var cuePointsIdList = [];\r\n                    for (var i = 0; i < videoCuePoints.length; i++) {\r\n                        cuePointsIdList.push(videoCuePoints[i].time);\r\n                    }\r\n\r\n                    //  Add videoCuePoints items from data set to video player\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        // console.log('----- begin extraction of new videoCuePoints item ' + i + ' ... ');\r\n\r\n                        mainPlayer.addCuePoint(videoCuePoints[i].time, videoCuePoints[i].data).then(function (id) {\r\n                            //console.log('cue point ' + i + ' was added successfully with id: ' + id);\r\n\r\n                        });\r\n                    }\r\n\r\n                    // 4. Get all CuePoints again\r\n                    mainPlayer.getCuePoints().then(function (videoCuePoints) {\r\n                        // 5. Make CuePoints Listener action (for visual indicating).\r\n                        if (videoCuePoints.length > 0) {\r\n                            //console.log('There is some final videoCuePoints in object.');\r\n                        } else {\r\n                            //console.log('Final videoCuePoints not found in object.');\r\n                        }\r\n                    });\r\n\r\n                    var nearestCuePoint = 0,\r\n                        nearestIndex = 0,\r\n                        nextCuePoint = 0,\r\n                        nextCuePointIndex = 0,\r\n                        prevCuePoint = 0,\r\n                        prevCuePointIndex = 0,\r\n                        thisIndex = 0,\r\n                        absDiffArr = [];\r\n\r\n                    var KeyShotsDiv = 'div#video-info > .left > div.KeyShots > ul';\r\n                    var KeyShotsNameDiv = 'div#video-info > .left > div.KeyShots > div.ShotName > span';\r\n\r\n                    // div#NextShot controller\r\n                    $(document).on('click', 'div#MPC div#NextShot', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        var buttonNextShot = $(this);\r\n                        buttonNextShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct nextCuePoint.\r\n                            if (currentTime * 1000 >= nearestCuePoint * 1000) {\r\n                                nextCuePointIndex = nearestIndex + 1; // just NEXT item in array\r\n\r\n                                // if we pass the nearest point, next point will be just NEXT item in array\r\n                                if (nextCuePointIndex >= videoCuePoints.length) { // But. If this index went beyond array,\r\n                                    nextCuePoint = videoCuePoints[0]; // then return to first cuePoint\r\n                                    thisIndex = 0;\r\n                                } else {\r\n                                    nextCuePoint = videoCuePoints[nextCuePointIndex];\r\n                                    thisIndex = nextCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                nextCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current nextCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(nextCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonNextShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(nextCuePoint);\r\n                                //console.log('Set time by div#NextShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n                    // div#PrevShot controller\r\n                    $(document).on('click', 'div#MPC div#PrevShot', function (event) {\r\n                        event.preventDefault();\r\n                        var buttonPrevShot = $(this);\r\n                        buttonPrevShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct prevCuePoint.\r\n                            if (currentTime * 1000 <= nearestCuePoint * 1000 + 1000) { // add additional delay for back clicking\r\n                                prevCuePointIndex = nearestIndex - 1;\r\n\r\n                                // if we pass the nearest point, prev point will be just prev item in array\r\n                                if (prevCuePointIndex < 0) { // But. If this index went beyond array, then return to last cuePoint in array\r\n                                    prevCuePointIndex = videoCuePoints.length - 1;\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                } else {\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                prevCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current prevCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(prevCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonPrevShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(prevCuePoint);\r\n                                // console.log('Set time by div#PrevShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Set the first ShotName in videoCuePoints and set all the LI\r\n                    $(KeyShotsNameDiv).html('<span style=\"color:#878787;\">' + videoCuePoints.length + ' shot points...</span>');\r\n                    // $('div#video-info > .left > div.KeyShots > div.ShotName').hide();\r\n\r\n                    // Set the LI elements\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        $(KeyShotsDiv).append('<li data-time=\"' + videoCuePoints[i].time + '\">' + videoCuePoints[i].data.ShotTag + '</li>');\r\n                    }\r\n\r\n                    var LoadVideoShotSwitch = function (keyShot) { // keyShot = object by numerical order from videoCuePoints data set\r\n                        // Write Shot Name in state text block\r\n                        // remove old .here\r\n                        $(KeyShotsDiv + ' > li.here').removeClass(\"here\");\r\n                        // set new .here and delete .load\r\n                        $(KeyShotsDiv + ' > li[data-time=' + keyShot.time + ']').removeClass(\"load\").addClass(\"here\");\r\n                        // $(KeyShotsNameDiv).hide().fadeIn(400).text(keyShot.data.ShotName);\r\n                    }\r\n\r\n                    // Controller to key shots link list\r\n                    $(document).on('click', KeyShotsDiv + ' > li', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        //if (!$( this ).hasClass( \"here\" )){ // don't do on .here class\r\n                        var keyShot = videoCuePoints[$(this).index()]; // object by numerical order from videoCuePoints data set\r\n                        // Start load the Cue Point\r\n                        $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                        $(this).addClass('load');\r\n                        // $(KeyShotsNameDiv).text('loading...');\r\n                        // Jump to ney key shot\r\n                        mainPlayer.setCurrentTime(keyShot.time).then(function (second) {\r\n                            LoadVideoShotSwitch(keyShot);\r\n                        });\r\n                        //}\r\n                    });\r\n\r\n                    // convert milliseconds to timecode\r\n                    var msToTime = function (duration) {\r\n                        var milliseconds = parseInt((duration % 1000) / 10) // parseInt\r\n                            , seconds = parseInt((duration / 1000) % 60) // parseInt\r\n                            , minutes = parseInt((duration / (1000 * 60)) % 60); // parseInt\r\n                        /*, hours = parseInt((duration/(1000*60*60))%24);*/\r\n\r\n                        /*hours = (hours < 10) ? '0' + hours : hours;*/\r\n                        minutes = (minutes < 10) ? '0' + minutes : minutes;\r\n                        seconds = (seconds < 10) ? '0' + seconds : seconds;\r\n                        milliseconds = (milliseconds < 10) ? '0' + milliseconds : milliseconds;\r\n\r\n                        return /*hours + ':' + */'<span class=\"prevFrame\"></span> ' + minutes + ':' + seconds + '<span>:' + milliseconds + ' </span><span class=\"nextFrame\"></span>';\r\n                    }\r\n\r\n                    // Time update + current que point recognition\r\n                    mainPlayer.on('timeupdate', function (data) {\r\n\r\n                        var seconds = data.seconds;\r\n                        if (seconds < 0.2) {\r\n                            seconds = 0.1;\r\n                        }\r\n                        // Refresh timecode\r\n                        // var timecode = msToTime(data.seconds * 1000); // get current time and convert to proper ms\r\n                        var timecode = msToTime(Math.ceil(seconds * 10) * 100); // get current time and convert to proper ms\r\n                        $('div.TimeCode').html(timecode); // put recalculated timecode to DOM\r\n\r\n                        // Looking for match each event in entire object of CuePoints\r\n                        for (i = 0; i < videoCuePoints.length; i++) {\r\n                            if (videoCuePoints[i].time >= data.seconds - 0 && videoCuePoints[i].time <= data.seconds + .8) {\r\n                                //console.log(\"!We got match on key \" + videoCuePoints[i].time);\r\n\r\n                                // Check the presence of .here in current li [data-time]\r\n                                if ($(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').hasClass(\"here\")) {\r\n                                    // already has .here, do nothing\r\n                                } else {\r\n                                    $(KeyShotsDiv + ' > li').removeClass(\"here\"); // delete .here from all others\r\n                                    $(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').addClass(\"here\"); // add .here\r\n                                    $(KeyShotsNameDiv).hide().fadeIn(200).html('<span style=\"color:#899ebb;\">' + videoCuePoints[i].timecode + '</span><div class=\"keyShot\"></div>' + videoCuePoints[i].data.ShotName); // load caption\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n                // prevFrame/nextFrame buttons\r\n                //---------------------------------------------------\r\n                // looks like Vimeo.Player() can't hold values below 0.1s\r\n                // object can give and accept only seconds starts from 0.11s\r\n                // which timecode interprets as 00:00:02 and duplicates this with true 00:00:02\r\n                // We also have autoplay cycle problem, which starts video from the beginning at near of the end\r\n\r\n                // set on nextFrame button\r\n                var nextFrame = 'div#video-info span.nextFrame';\r\n                $(document).on('click', nextFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds < 0.11) { // this is hack to convert all unsupported results by player < 1.1 values to 0.2 and adjust current time to the same round value\r\n                            mainPlayer.pause(); // init pause first time for further condition\r\n                            mainPlayer.setCurrentTime(0.11); // looks like Vimeo.Player(iframe); can't hold below 0.1s\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n\r\n                            // This duration end will be use to define when to stop iterate nextFrame button\r\n                            var videoDuration = 0.0;\r\n                            mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                                videoDuration = duration;\r\n                                // console.log('videoDuration init is ' + duration);\r\n                            });\r\n\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n                                    var sInc = (parseFloat(seconds.toFixed(1)) + 0.1).toFixed(1);\r\n\r\n                                    // console.log('----------');\r\n                                    // console.log('Seconds init as ' + seconds);\r\n                                    // console.log('sInc is ' + sInc);\r\n                                    // console.log('videoDuration is ' + videoDuration);\r\n\r\n                                    if (seconds < videoDuration - 0.7) { // this will make sure to make action and show load class only if we not reached end of the video (AND BEFORE AUTO PLAY STARTS)\r\n                                        $(nextFrame).addClass(\"loading\");\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    }\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // set on prevFrame button\r\n                var prevFrame = 'div#video-info span.prevFrame';\r\n                $(document).on('click', prevFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds <= 0.11) { // this is hack to prevent zero result that duplicates others < 1.1 values (unsupported by player) (those looks the same for timecode)\r\n                            return true;\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n\r\n                                    if (seconds > 0.2) { // this is hack to prevent subtraction that result unsupported < 1.1 values by player\r\n                                        $(prevFrame).addClass(\"loading\");\r\n                                        var sInc = (parseFloat(seconds.toFixed(1)) - 0.1).toFixed(1);\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    } else {\r\n                                        mainPlayer.setCurrentTime(0.11); // return to default working minimal value\r\n                                    }\r\n                                    // console.log('Result as ' + seconds);\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        };\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./desktop/js/static/load-video.js\n// module id = 1\n// module chunks = 0","\r\n//------------------------------------------------------------------------------------\r\n// Desktop. General\r\nmodule.exports = function() {\r\n\r\n    $(document).ready(function () {\r\n\r\n        tvLab.nowVid ? tvLab.loadVideoOnPage(tvLab.nowVid) : null;\r\n\r\n        tvLab.checkAlert = function (text) {\r\n            alert(text);\r\n        };\r\n\r\n        tvLab.indexOfMin = function (arr) {\r\n            if (arr.length === 0) {\r\n                return -1; // this will return on empty array\r\n            }\r\n\r\n            var min = arr[0];\r\n            var minIndex = 0;\r\n\r\n            for (var i = 1; i < arr.length; i++) {\r\n                if (arr[i] < min) {\r\n                    minIndex = i;\r\n                    min = arr[i];\r\n                }\r\n            }\r\n\r\n            return minIndex;\r\n        };\r\n\r\n        tvLab.isEmpty = function (str) {\r\n            return ( !str || 0 === str.length );\r\n        };\r\n\r\n        tvLab.dropTypeOnClick = function () {\r\n            // Drops filters state and reloads\r\n            $('input#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.resetSet = function (tag) {\r\n            // Drops filters state, reloads, select new tag\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.urlVideo = function (param) {\r\n            // Select new video input param\r\n\r\n            var url = tvLab.nowUrl;\r\n            var Rgx = /(video=)(\\d*)/;\r\n\r\n            if (typeof param !== 'undefined') {\r\n\r\n                if (!url.match(Rgx)) {\r\n                    url = url + '&' + \"video=\" + param;\r\n                }\r\n\r\n                var newUrl = url.replace(Rgx, \"$1\" + param);\r\n                window.history.pushState(\"\", \"\", \"?\" + newUrl);\r\n                tvLab.nowUrl = newUrl;\r\n                return newUrl;\r\n\r\n            } else {\r\n\r\n                //--Shows URLs video param\r\n                var Rslt = \"\";\r\n                if (Rslt = url.match(Rgx)) {\r\n                    if (!tvLab.isEmpty(Rslt[2])) {\r\n                        return Rslt[2];\r\n                    } else {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        tvLab.loadVideoOnClick = function (id, thisObj) {\r\n            // Load Video On Click + some actions on this event\r\n            // Update Video Input param\r\n            tvLab.urlVideo(id);\r\n\r\n            // Update Video Input param\r\n            $('input#InputVideo').val(id);\r\n\r\n            // Update Logo Button\r\n            //$('.tpLogo').html('<a href=\"?video=' + id + '\"></a>');\r\n\r\n            // Update Item Box Here class\r\n            $(\"div.item.here\").removeClass(\"here\");\r\n            $(thisObj).parent().parent().addClass(\"here\");\r\n\r\n            //Load Video\r\n            tvLab.loadVideoOnPage(id);\r\n        };\r\n\r\n        /**\r\n         * Video display Tag here highlight when entire document ready */\r\n\r\n        var tags_arr = tvLab.nowTags.split(' ');\r\n        $.each(tags_arr, function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        /**\r\n         * AdjustH1InfoOutput Line */\r\n        //-- Remove tag on x click\r\n        $(\"div#main-output > h1.state-info > span.Tags > span.tag span.x-close\")\r\n            .on(\"click\", function (event) {\r\n\r\n                // Recognize tag text\r\n                var TagText = $(this).parent().text();\r\n                TagText = TagText.replace(\"⨯\", \"\");\r\n                TagText = TagText.replace(\"# \", \"\");\r\n\r\n                // Remove tag\r\n                $(\"ul.top-panel__search-field\").tagit(\"removeTagByLabel\", TagText);\r\n\r\n                // Remove div tag\r\n                $(this).parent().fadeOut(200, function () {\r\n                    TagText.remove();\r\n                });\r\n                // Submit with delay\r\n                setTimeout(function () {\r\n                    $('#top-panel__search').submit();\r\n                }, 100);\r\n            });\r\n\r\n\r\n        /**\r\n         * Video display tag click event */\r\n\r\n        $(document).on('click', 'a.tag', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n        // Tags overview Tag click event\r\n        $(document).on('click', 'a.tag-item', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            // $('input#InputVideo').val(\"\"); // Drop displayed video to \"\"\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n\r\n        /**\r\n         *  Accordion Left Panel with Tags overview\r\n         *  Tag \"here\" highlighted with entire document */\r\n\r\n        $.each(tvLab.nowTags.split(' '), function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        // tvLab.menuState = 3; // is works\r\n        // let menuState = document.cookie[document.cookie.length-1];\r\n        // COOKIE NOT WORKING WITH ACCORDION\r\n\r\n        $(\"aside#left-panel div.accordion\").accordion({\r\n            collapsible: true,\r\n            active: tvLab.menuState,\r\n            heightStyle: \"content\",\r\n\r\n            create: function (event, ui) {\r\n                $('aside#left-panel div.accordion').css(\"display\", \"block\");\r\n                // console.log('accordion create: '+ $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\"), tvLab.menuState);\r\n            },\r\n\r\n            activate: function (event, ui) {\r\n                var tagMenuActive = $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\");\r\n                document.cookie = \"TagMenuState=\" + tagMenuActive;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        $('#container').waterfall({\r\n            itemCls: 'item',\r\n            fitWidth: false,\r\n            colWidth: 319,\r\n            gutterWidth: 19,\r\n            gutterHeight: 15,\r\n            align: 'center',\r\n            minCol: 1,\r\n            maxCol: 3,\r\n            debug: false,\r\n            checkImagesLoaded: false,\r\n            callbacks: {\r\n\r\n                loadingFinished: function ($loading, isBeyondMaxPage) {\r\n\r\n                    !isBeyondMaxPage ? $loading.fadeOut() : $loading.remove();\r\n\r\n                    //-- Check for not selected video\r\n                    if (tvLab.urlVideo() === undefined) { // If url video param does not exist\r\n                        if ($(\".waterfall-container .item.here\").length === 0) { // if .box.here does not exist too\r\n                            $(\".waterfall-container .item:first-child\").addClass(\"here\"); // add class to first one\r\n                        }\r\n                    }\r\n\r\n                    $(document).on('click', '.waterfall-container a.wf-load-video', function (event) {\r\n                        event.preventDefault();\r\n                        tvLab.loadVideoOnClick($(this).data('id'), $(this));\r\n                    });\r\n\r\n                },\r\n                renderData: function (data, dataType) {\r\n\r\n                    if (data.pages === data.page) {\r\n                        $('#container').waterfall('pause', function () {\r\n                            $('#waterfall-message').html('<!--No more result from database-->')\r\n                        });\r\n                    }\r\n\r\n                    if (!tvLab.nowVid) {\r\n                        if (data.page === 1) {\r\n                            tvLab.loadVideoOnPage( data.FirstVideo );\r\n                        }\r\n                    }\r\n\r\n                    if (dataType === 'json' || dataType === 'jsonp') {\r\n                        // json or jsonp format\r\n                        var tpl = $('#waterfall-tpl').html();\r\n                        var template = Handlebars.compile(tpl);\r\n                        return template(data);\r\n                    } else {\r\n                        // html format\r\n                        return data;\r\n                    }\r\n\r\n                }\r\n            },\r\n            path: function (page) {\r\n                return 'desktop/json/waterfall_page.php?'+tvLab.nowUrl+'&page=' + page;\r\n            }\r\n        });\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./desktop/js/static/desktop.js\n// module id = 2\n// module chunks = 0","\r\n//------------------------------------------------------------------------------------\r\n// Top panel\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Filter Buttons Assemble\r\n\r\n        var mQ;\r\n\r\n        // screw-default-buttons init\r\n        $('input:radio').screwDefaultButtons({\r\n            image: 'url(\"img/radioSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        $('input:checkbox').screwDefaultButtons({\r\n            image: 'url(\"img/checkboxSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        // Hide before build completely\r\n        $('.top-panel__search-filters_fixwrap').css(\"display\", \"block\");\r\n\r\n        // Sync with php passed url 'set code'\r\n        tvLab.nowSet.match(/[\\d\\w]{12}/) ? mQ = tvLab.nowSet : mQ = \"c0d0s0a0t0v0\";\r\n\r\n        // Shorthand for submit\r\n        tvLab.mqSetSubmit = function () {\r\n            $('#set').val(mQ);\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        // Check the 'chk' in form, if so -- changing filter code mQ\r\n        $('#comp')[0].checked === true ? mQ = mQ.replace(/c0/, 'c1') : null;\r\n        $('#3d')[0].checked === true ? mQ = mQ.replace(/d0/, 'd1') : null;\r\n        $('#sim')[0].checked === true ? mQ = mQ.replace(/s0/, 's1') : null;\r\n        $('#anim')[0].checked === true ? mQ = mQ.replace(/a0/, 'a1') : null;\r\n        $('#stpm')[0].checked === true ? mQ = mQ.replace(/t0/, 't1') : null;\r\n        $('#vid')[0].checked === true ? mQ = mQ.replace(/v0/, 'v1') : null;\r\n\r\n        // Event Callbacks\r\n        $('.styledCheckbox:has(#md)').on('click', function () {\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#comp)').on('click', function () {\r\n            if ($('#comp').is(':checked')) {\r\n                if (!mQ.match(/c1/)) {\r\n                    mQ = mQ.replace(/c0/, 'c1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/c0/)) {\r\n                    mQ = mQ.replace(/c1/, 'c0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#3d)').on('click', function () {\r\n            if ($('#3d').is(':checked')) {\r\n                if (!mQ.match(/d1/)) {\r\n                    mQ = mQ.replace(/d0/, 'd1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/d0/)) {\r\n                    mQ = mQ.replace(/d1/, 'd0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#sim)').on('click', function () {\r\n            if ($('#sim').is(':checked')) {\r\n                if (!mQ.match(/s1/)) {\r\n                    mQ = mQ.replace(/s0/, 's1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/s0/)) {\r\n                    mQ = mQ.replace(/s1/, 's0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#anim)').on('click', function () {\r\n            if ($('#anim').is(':checked')) {\r\n                if (!mQ.match(/a1/)) {\r\n                    mQ = mQ.replace(/a0/, 'a1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/a0/)) {\r\n                    mQ = mQ.replace(/a1/, 'a0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#stpm)').on('click', function () {\r\n            if ($('#stpm').is(':checked')) {\r\n                if (!mQ.match(/t1/)) {\r\n                    mQ = mQ.replace(/t0/, 't1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/t0/)) {\r\n                    mQ = mQ.replace(/t1/, 't0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#vid)').on('click', function () {\r\n            if ($('#vid').is(':checked')) {\r\n                if (!mQ.match(/v1/)) {\r\n                    mQ = mQ.replace(/v0/, 'v1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/v0/)) {\r\n                    mQ = mQ.replace(/v1/, 'v0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Tagit auto complete. top panel input area\r\n\r\n        tvLab.sampleTags = ['realism', 'abstract', 'minimalism', 'futurism', 'surrealism', 'contemporary', 'cinematic', 'Cartoon', 'Art', 'Beauty', 'Adventures', 'Story', 'Fantasy', 'Spiritual', 'Culture', 'Sport', 'Games', 'Enertament', 'Mans', 'Womens', 'Comedy', 'Show', 'Cinema', 'Fun', 'Weird', 'News', 'Info', 'Promo', 'Test', 'Science', 'Education', 'History', 'Political', 'Social', 'Nature', 'Health', 'Industry', 'Buisness', 'Finance', 'Services', 'Vehicles', 'Technology', 'Digital', 'CG', 'Crafts', 'War', 'Criminal'];\r\n\r\n        //-------------------------------\r\n        // Single field\r\n        //-------------------------------\r\n        $('ul.top-panel__search-field').tagit({\r\n            showAutocompleteOnFocus: false,\r\n            autocomplete: {delay: 0, minLength: 0},\r\n            tagLimit: 3,\r\n            availableTags: tvLab.sampleTags,\r\n            singleField: true,\r\n            singleFieldNode: $('input.top-panel__search-field'),\r\n            afterTagRemoved: function (evt, ui) {\r\n                //document.getElementById(\"top-panel__search\").submit();\r\n            }\r\n\r\n        });\r\n\r\n        //-------------------------------\r\n        // Preloading data in markup\r\n        //-------------------------------\r\n        $('#myULTags').tagit({\r\n            availableTags: tvLab.sampleTags, // this param is of course optional. it's for autocomplete.\r\n            // configure the name of the input field (will be submitted with form), default: item[tags]\r\n            itemName: 'item',\r\n            fieldName: 'tags'\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag events\r\n        //-------------------------------\r\n        tvLab.eventTags = $('#eventTags');\r\n\r\n        tvLab.addEvent = function (text) {\r\n            $('#events_container').append(text + '<br>');\r\n        };\r\n\r\n        tvLab.eventTags.tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            beforeTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('beforeTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            afterTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('afterTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            beforeTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('beforeTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            afterTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('afterTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagClicked: function (evt, ui) {\r\n                tvLab.addEvent('onTagClicked: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagExists: function (evt, ui) {\r\n                tvLab.addEvent('onTagExists: ' + tvLab.eventTags.tagit('tagLabel', ui.existingTag));\r\n            }\r\n        });\r\n\r\n        //-------------------------------\r\n        // Read-only\r\n        //-------------------------------\r\n        $('#readOnlyTags').tagit({\r\n            readOnly: false\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag-it methods\r\n        //-------------------------------\r\n        $('#methodTags').tagit({\r\n            availableTags: tvLab.sampleTags\r\n        });\r\n\r\n        //-------------------------------\r\n        // Allow spaces without quotes.\r\n        //-------------------------------\r\n        $('#allowSpacesTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            allowSpaces: true\r\n        });\r\n\r\n        //-------------------------------\r\n        // Remove confirmation\r\n        //-------------------------------\r\n        $('#removeConfirmationTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            removeConfirmation: true\r\n        });\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./desktop/js/static/top-panel.js\n// module id = 3\n// module chunks = 0","\r\n//------------------------------------------------------------------------------------\r\n// Television Lab Player link with waterfall output grid: prev/next video bond ability\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n        // References for Vimeo Player API\r\n        // https://github.com/vimeo/player.js\r\n\r\n        tvLab.setAutoPlayUI = function (type) { // \"Cycle\" or \"Next\"\r\n            var AutoPlayButton = $(\"div#MPC div.AutoPlay\");\r\n\r\n            if (type === \"Next\") {\r\n                AutoPlayButton.removeClass(\"Cycle\");\r\n                AutoPlayButton.addClass(\"Next\");\r\n            } else if (type === \"Cycle\") {\r\n                AutoPlayButton.removeClass(\"Next\");\r\n                AutoPlayButton.addClass(\"Cycle\");\r\n            }\r\n        };\r\n\r\n        tvLab.videoGoAndPlay = function (state) {\r\n            var this_Vid_Obj = $(\"#container.waterfall-container div.item.here\");\r\n            var first_Vid_Obj = $(\"#container.waterfall-container\").children().first();\r\n            var next_Vid_Obj = this_Vid_Obj.next();\r\n            var prev_Vid_Obj = this_Vid_Obj.prev();\r\n            var next_Vid_Id = next_Vid_Obj.data(\"id\");\r\n            var prev_Vid_Id = prev_Vid_Obj.data(\"id\");\r\n\r\n            if (state === \"Next\") {\r\n                if (typeof next_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    next_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(next_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n\r\n            if (state === \"Prev\") {\r\n                if (typeof prev_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    prev_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(prev_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n        };\r\n\r\n        /* Desktop player listeners extends Main Player */\r\n        $(document).on('click', 'div#MPC div#NextVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Next\");\r\n        });\r\n\r\n        $(document).on('click', 'div#MPC div#PrevVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Prev\");\r\n        });\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./desktop/js/static/main-player.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}