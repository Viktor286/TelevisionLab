{"version":3,"sources":["webpack:///build.008d5bf16f353a2380d6.js","webpack:///webpack/bootstrap ed74579a859779cc0fd2","webpack:///./desktop/js/static/app.js","webpack:///./desktop/js/static/load-video.js","webpack:///./desktop/js/static/desktop.js","webpack:///./desktop/js/static/top-panel.js","webpack:///./desktop/js/static/main-player.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","loadVideo","desktop","topPanel","mainPlayer","$","document","ready","tvLab","loadVideoOnPage","VideoId","css","ajax","success","response","html","hide","fadeIn","setTimeout","data","cache","done","tags_arr","nowTags","split","each","index","value","addClass","iframe","querySelector","Vimeo","Player","playPauseBt","on","event","preventDefault","getPaused","then","paused","play","pause","catch","error","console","log","playPauseSwitch","paused_state","removeClass","autoPlayState","setAutoPlayUI","setLoop","loop","cookie","videoGoAndPlay","getCuePoints","cuePoints","length","removeCuePoint","id","getDuration","duration","equalPart","Math","floor","parseInt","videoCuePointsForDemo","videoCuePoints","time","ShotTag","ShotName","mins","toString","secs","timecode","cuePointsIdList","push","addCuePoint","nearestCuePoint","nearestIndex","nextCuePoint","nextCuePointIndex","prevCuePoint","prevCuePointIndex","thisIndex","absDiffArr","KeyShotsDiv","KeyShotsNameDiv","buttonNextShot","this","getCurrentTime","currentTime","abs","indexOfMin","eq","setCurrentTime","second","LoadVideoShotSwitch","buttonPrevShot","append","keyShot","msToTime","milliseconds","seconds","minutes","ceil","hasClass","nextFrame","videoDuration","sInc","parseFloat","toFixed","prevFrame","nowVid","checkAlert","text","alert","arr","min","minIndex","isEmpty","str","dropTypeOnClick","val","submit","resetSet","tag","tagit","urlVideo","param","url","nowUrl","Rgx","match","newUrl","replace","window","history","pushState","Rslt","loadVideoOnClick","thisObj","parent","TagText","fadeOut","remove","target","accordion","collapsible","active","menuState","heightStyle","create","ui","activate","tagMenuActive","waterfall","itemCls","fitWidth","colWidth","gutterWidth","gutterHeight","align","minCol","maxCol","debug","checkImagesLoaded","callbacks","loadingFinished","$loading","isBeyondMaxPage","undefined","renderData","dataType","pages","page","FirstVideo","tpl","Handlebars","compile","path","mQ","screwDefaultButtons","image","width","height","nowSet","mqSetSubmit","checked","is","sampleTags","showAutocompleteOnFocus","autocomplete","delay","minLength","tagLimit","availableTags","singleField","singleFieldNode","afterTagRemoved","evt","itemName","fieldName","eventTags","addEvent","beforeTagAdded","duringInitialization","afterTagAdded","beforeTagRemoved","onTagClicked","onTagExists","existingTag","readOnly","allowSpaces","removeConfirmation","type","AutoPlayButton","state","this_Vid_Obj","first_Vid_Obj","children","first","next_Vid_Obj","next","prev_Vid_Obj","prev","next_Vid_Id","prev_Vid_Id"],"mappings":"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","file":"build.008d5bf16f353a2380d6.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar loadVideo = __webpack_require__(1);\nvar desktop = __webpack_require__(2);\nvar topPanel = __webpack_require__(3);\nvar mainPlayer = __webpack_require__(4);\n\nloadVideo();\ndesktop();\ntopPanel();\nmainPlayer();\n\n// module.exports.tester = tester;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//------------------------------------------------------------------------------------\n// Async Display Video On page + build show video module\nmodule.exports = function () {\n    $(document).ready(function () {\n\n        tvLab.loadVideoOnPage = function (VideoId) {\n            'use strict';\n\n            // set the background gif\n\n            $('div#preview-window').css('background-image', 'url(_global/img/loader_0.gif)');\n\n            $.ajax('desktop/ajax/video.php', {\n                success: function success(response) {\n\n                    // $('#preview-window').hide().fadeIn(150);\n\n                    $('#preview-window').html('<div class=\"box\">' + '<iframe src=\"//player.vimeo.com/video/' + VideoId + '?title=0&byline=0&portrait=0&autoplay=1\"  frameborder=\"0\" ' + 'webkitallowfullscreen mozallowfullscreen allowfullscreen>' + '</iframe></div>')\n                    // .load(function (e) {\n                    // $(this).contents().find('body').addClass('Z');})\n                    ;\n\n                    $('#video-info').hide().html(response).fadeIn(100);\n\n                    // remove background image\n                    setTimeout(function () {\n                        $('div#preview-window').css('background-image', 'none');\n                    }, 1000);\n                },\n                data: { \"VideoId\": VideoId },\n                cache: false\n\n            }).done(function () {\n\n                //-------- When Ajax Video Loaded\n                // This will fire when video loaded\n\n                // Highlight tags\n                var tags_arr = tvLab.nowTags.split(' ');\n                $.each(tags_arr, function (index, value) {\n                    $('a.tag[data-tag=' + value + ']').addClass(\"here\");\n                });\n\n                // Play-Pause of top panel player\n                var iframe = document.querySelector('iframe');\n                var mainPlayer = new Vimeo.Player(iframe);\n                var playPauseBt = $(\"div#MPC div#PlayPause\");\n                var init = mainPlayer; // initialization of mainPlayer object, which is inactive till first usage\n\n                // Time code result: playback is jumpy, no way to make decent time code\n                /*        mainPlayer.on('timeupdate', function(data) {\r\n                 console.log(data.seconds);\r\n                 $('div.timecode').html(\"000\" + data.seconds);\r\n                 });*/\n\n                // Set On PlayPause Button Event\n                $(document).on('click', 'div#MPC div#PlayPause', function (event) {\n                    event.preventDefault();\n                    mainPlayer.getPaused().then(function (paused) {\n                        if (paused === true) {\n                            mainPlayer.play();\n                        } else {\n                            mainPlayer.pause();\n                        }\n                    }).catch(function (error) {\n                        // an error occurred\n                        console.log(\"an error occurred during on('click') mainPlayer.getPaused()\");\n                    });\n                });\n\n                //------ Player play/pause Actions\n                var playPauseSwitch = function playPauseSwitch(paused_state) {\n                    if (paused_state === true) {\n                        // Pause was ON, switch to play\n                        playPauseBt.removeClass(\"pause\");\n                        playPauseBt.addClass(\"play\");\n                        //console.log(\"Pause was ON. Show Play Button\");\n                    } else {\n                        // Pause was OFF, turn it on\n                        playPauseBt.removeClass(\"play\");\n                        playPauseBt.addClass(\"pause\");\n                        //console.log(\"Pause was OFF. Show Pause Button\");\n                    }\n                };\n\n                mainPlayer.on('play', function (data) {\n                    // data is an object containing properties specific to that event (play data: duration, percent, seconds)\n                    mainPlayer.getPaused().then(function (paused) {\n                        playPauseSwitch(paused);\n                    }).catch(function (error) {\n                        // an error occurred\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\n                    });\n                });\n\n                mainPlayer.on('pause', function (data) {\n                    // data is an object containing properties specific to that event\n                    mainPlayer.getPaused().then(function (paused) {\n                        playPauseSwitch(paused);\n                    }).catch(function (error) {\n                        // an error occurred\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\n                    });\n                });\n\n                // Init AutoPlay param and UI by getting tvLab.autoPlayState from cookie (php-cookie-pipe).\n                if (tvLab.autoPlayState === 1) {\n                    tvLab.setAutoPlayUI(\"Next\");\n                    mainPlayer.setLoop(false);\n                    //console.log(\"init tvLab.autoPlayState == 1\");\n                } else {\n                    tvLab.setAutoPlayUI(\"Cycle\");\n                    mainPlayer.setLoop(true);\n                    //console.log(\"init tvLab.autoPlayState == 0\");\n                }\n\n                //------ Auto Next Play Button\n                // AutoPlay button on.click Actions\n                $(document).on('click', 'div#MPC div.AutoPlay', function (event) {\n                    event.preventDefault();\n                    if (tvLab.autoPlayState === 1) {\n                        // If tvLab.autoPlayState toggle was ON, then switch this back to 0, Cycle\n                        mainPlayer.setLoop(true).then(function (loop) {\n                            // Set player loop on\n                            tvLab.setAutoPlayUI(\"Cycle\"); // Change UI\n                            tvLab.autoPlayState = 0; // Change UI state\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\n                            //console.log(\"Set loop on: player, UI, var, cookie.\");\n                        }).catch(function (error) {\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\n                        });\n                    } else {\n                        // If tvLab.autoPlayState toggle is ON, then switch this to Cycle\n                        mainPlayer.setLoop(false).then(function (loop) {\n                            // Set player loop off\n                            tvLab.setAutoPlayUI(\"Next\"); // Change UI\n                            tvLab.autoPlayState = 1; // Change UI state\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\n                            //console.log(\"Set loop off, autoplay on: player, UI, var, cookie.\");\n                        }).catch(function (error) {\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\n                        });\n                    }\n                });\n\n                //------ Auto Next Play Video Functionality\n                mainPlayer.on('ended', function (data) {\n                    // This event fires only if loop is off\n                    // data is an object containing properties specific to that event\n                    tvLab.videoGoAndPlay(\"Next\");\n                });\n\n                //------ CuePoints Prev/Next init\n\n                // 1. Get all CuePoints for video\n                //console.log('1. Get all CuePoints for video.');\n                mainPlayer.getCuePoints().then(function (cuePoints) {\n                    //console.log('Primary collection getCuePoints() worked fine: ');\n                    // console.log(cuePoints);\n\n                    // 2. Delete all existing CuePoints for loaded media\n                    if (cuePoints.length > 0) {\n                        // console.log('Some CuePoints already exist for loaded media.');\n                        // console.log('Deleting all existing CuePoints for loaded media');\n                        for (var i = 0; i < cuePoints.length; i++) {\n\n                            mainPlayer.removeCuePoint(cuePoints[i].id).then(function (id) {// cuePoints = an array of cue point objects\n                                // console.log('cue point ' + id + ' was removed successfully: ');\n                            }).catch(function (error) {\n                                switch (error.name) {\n                                    case 'UnsupportedError':\n                                        console.log('cue points are not supported with the current player or browser');\n                                        break;\n                                    case 'InvalidCuePoint':\n                                        console.log('a cue point with the id passed wasn’t found');\n                                        break;\n                                    default:\n                                        console.log('some other error occurred');\n                                        break;\n                                }\n                            });\n                        }\n                    } else {\n                        //console.log('No CuePoints found for loaded media.');\n                    }\n                }).catch(function (error) {\n                    // catch for mainPlayer.getCuePoints()\n                    switch (error.name) {\n                        case 'UnsupportedError':\n                            console.log('cue points are not supported with the current player or browser');\n                            break;\n                        default:\n                            console.log('some other error occurred during mainPlayer.getCuePoints()');\n                            break;\n                    }\n                });\n\n                // ------------------------------------------------\n                // 3. Assign all CuePoints in cycle for loaded media (add CuePoints for current video) from DB data\n\n                mainPlayer.getDuration().then(function (duration) {\n                    // duration = the duration of the video in seconds\n                    // this getDuration callback need to calculate time point for test demo\n                    // and it will be replaced by 'DB CuePoints data' callback\n\n                    var equalPart = Math.floor(parseInt(duration) / 5);\n                    var videoCuePointsForDemo = [1, equalPart * 2, equalPart * 3, equalPart * 4, duration - 1];\n\n                    // console.log('videoCuePointsForDemo: '+videoCuePointsForDemo);\n\n                    // temp data object\n                    var videoCuePoints = [{\n                        \"time\": videoCuePointsForDemo[0],\n                        \"data\": {\n                            \"ShotTag\": \"KeyShot-1\",\n                            \"ShotName\": \"First key shot looks nice.\" // this is \"customKey\": \"customValue\"\n                        },\n                        \"id\": \"videoCuePoint-0\"\n                    }, {\n                        \"time\": videoCuePointsForDemo[1],\n                        \"data\": {\n                            \"ShotTag\": \"ShotTag\",\n                            \"ShotName\": \"This one not bad too!\"\n                        },\n                        \"id\": \"videoCuePoint-1\"\n                    }, {\n                        \"time\": videoCuePointsForDemo[2],\n                        \"data\": {\n                            \"ShotTag\": \"CustomTag\",\n                            \"ShotName\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n                        },\n                        \"id\": \"videoCuePoint-2\"\n                    }, {\n                        \"time\": videoCuePointsForDemo[3],\n                        \"data\": {\n                            \"ShotTag\": \"CoolTag\",\n                            \"ShotName\": \"Composition and color are worth to checkout.\"\n                        },\n                        \"id\": \"videoCuePoint-3\"\n                    }, {\n                        \"time\": videoCuePointsForDemo[4],\n                        \"data\": {\n                            \"ShotTag\": \"LastKeyShot\",\n                            \"ShotName\": \"Well, this is just last key shot in this cue.\"\n                        },\n                        \"id\": \"videoCuePoint-0\"\n                    }];\n\n                    // Adding timecode formatted time\n                    for (i = 0; i < videoCuePoints.length; i++) {\n\n                        var mins = Math.floor(videoCuePoints[i].time / 60 % 60).toString();\n                        var secs = Math.floor(videoCuePoints[i].time % 60).toString();\n\n                        if (mins.length < 2) {\n                            mins = '0' + mins;\n                        }\n\n                        if (secs.length < 2) {\n                            secs = '0' + secs;\n                        }\n\n                        videoCuePoints[i].timecode = mins + ':' + secs;\n                    }\n\n                    // Debug timecode list\n                    /*for (i = 0; i < videoCuePoints.length; i++) {\r\n                     console.log(videoCuePoints[i].timecode);\r\n                     }*/\n\n                    // Make short version of data set\n                    var cuePointsIdList = [];\n                    for (var i = 0; i < videoCuePoints.length; i++) {\n                        cuePointsIdList.push(videoCuePoints[i].time);\n                    }\n\n                    //  Add videoCuePoints items from data set to video player\n                    for (i = 0; i < videoCuePoints.length; i++) {\n                        // console.log('----- begin extraction of new videoCuePoints item ' + i + ' ... ');\n\n                        mainPlayer.addCuePoint(videoCuePoints[i].time, videoCuePoints[i].data).then(function (id) {\n                            //console.log('cue point ' + i + ' was added successfully with id: ' + id);\n\n                        });\n                    }\n\n                    // 4. Get all CuePoints again\n                    mainPlayer.getCuePoints().then(function (videoCuePoints) {\n                        // 5. Make CuePoints Listener action (for visual indicating).\n                        if (videoCuePoints.length > 0) {\n                            //console.log('There is some final videoCuePoints in object.');\n                        } else {\n                                //console.log('Final videoCuePoints not found in object.');\n                            }\n                    });\n\n                    var nearestCuePoint = 0,\n                        nearestIndex = 0,\n                        nextCuePoint = 0,\n                        nextCuePointIndex = 0,\n                        prevCuePoint = 0,\n                        prevCuePointIndex = 0,\n                        thisIndex = 0,\n                        absDiffArr = [];\n\n                    var KeyShotsDiv = 'div#video-info > .left > div.KeyShots > ul';\n                    var KeyShotsNameDiv = 'div#video-info > .left > div.KeyShots > div.ShotName > span';\n\n                    // div#NextShot controller\n                    $(document).on('click', 'div#MPC div#NextShot', function (event) {\n                        event.preventDefault();\n\n                        var buttonNextShot = $(this);\n                        buttonNextShot.addClass(\"disabled\");\n\n                        // Get Current Time to calculate where we are and where to go\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\n\n                            // Find nearest point for currentTime\n                            // Find absolute difference between currentTime and all cuePoints in data set\n                            for (i = 0; i < cuePointsIdList.length; i++) {\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\n                            }\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\n\n                            // Compare currentTime and nearestCuePoint to define correct nextCuePoint.\n                            if (currentTime * 1000 >= nearestCuePoint * 1000) {\n                                nextCuePointIndex = nearestIndex + 1; // just NEXT item in array\n\n                                // if we pass the nearest point, next point will be just NEXT item in array\n                                if (nextCuePointIndex >= videoCuePoints.length) {\n                                    // But. If this index went beyond array,\n                                    nextCuePoint = videoCuePoints[0]; // then return to first cuePoint\n                                    thisIndex = 0;\n                                } else {\n                                    nextCuePoint = videoCuePoints[nextCuePointIndex];\n                                    thisIndex = nextCuePointIndex;\n                                }\n                            } else {\n                                nextCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\n                                thisIndex = nearestIndex;\n                            }\n\n                            // Start load the Cue Point ( VideoShot )\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\n                            // $(KeyShotsNameDiv).text('loading...');\n\n                            // Set current nextCuePoint time\n\n                            mainPlayer.setCurrentTime(nextCuePoint.time).then(function (second) {\n                                //mainPlayer.pause();\n                                buttonNextShot.removeClass(\"disabled\");\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\n                                LoadVideoShotSwitch(nextCuePoint);\n                                //console.log('Set time by div#NextShot to ' + second);\n                            });\n                        });\n                    });\n\n                    // div#PrevShot controller\n                    $(document).on('click', 'div#MPC div#PrevShot', function (event) {\n                        event.preventDefault();\n                        var buttonPrevShot = $(this);\n                        buttonPrevShot.addClass(\"disabled\");\n\n                        // Get Current Time to calculate where we are and where to go\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\n\n                            // Find nearest point for currentTime\n                            // Find absolute difference between currentTime and all cuePoints in data set\n                            for (i = 0; i < cuePointsIdList.length; i++) {\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\n                            }\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\n\n                            // Compare currentTime and nearestCuePoint to define correct prevCuePoint.\n                            if (currentTime * 1000 <= nearestCuePoint * 1000 + 1000) {\n                                // add additional delay for back clicking\n                                prevCuePointIndex = nearestIndex - 1;\n\n                                // if we pass the nearest point, prev point will be just prev item in array\n                                if (prevCuePointIndex < 0) {\n                                    // But. If this index went beyond array, then return to last cuePoint in array\n                                    prevCuePointIndex = videoCuePoints.length - 1;\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\n                                    thisIndex = prevCuePointIndex;\n                                } else {\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\n                                    thisIndex = prevCuePointIndex;\n                                }\n                            } else {\n                                prevCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\n                                thisIndex = nearestIndex;\n                            }\n\n                            // Start load the Cue Point ( VideoShot )\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\n                            // $(KeyShotsNameDiv).text('loading...');\n\n                            // Set current prevCuePoint time\n\n                            mainPlayer.setCurrentTime(prevCuePoint.time).then(function (second) {\n                                //mainPlayer.pause();\n                                buttonPrevShot.removeClass(\"disabled\");\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\n                                LoadVideoShotSwitch(prevCuePoint);\n                                // console.log('Set time by div#PrevShot to ' + second);\n                            });\n                        });\n                    });\n\n                    // Set the first ShotName in videoCuePoints and set all the LI\n                    $(KeyShotsNameDiv).html('<span style=\"color:#878787;\">' + videoCuePoints.length + ' shot points...</span>');\n                    // $('div#video-info > .left > div.KeyShots > div.ShotName').hide();\n\n                    // Set the LI elements\n                    for (i = 0; i < videoCuePoints.length; i++) {\n                        $(KeyShotsDiv).append('<li data-time=\"' + videoCuePoints[i].time + '\">' + videoCuePoints[i].data.ShotTag + '</li>');\n                    }\n\n                    var LoadVideoShotSwitch = function LoadVideoShotSwitch(keyShot) {\n                        // keyShot = object by numerical order from videoCuePoints data set\n                        // Write Shot Name in state text block\n                        // remove old .here\n                        $(KeyShotsDiv + ' > li.here').removeClass(\"here\");\n                        // set new .here and delete .load\n                        $(KeyShotsDiv + ' > li[data-time=' + keyShot.time + ']').removeClass(\"load\").addClass(\"here\");\n                        // $(KeyShotsNameDiv).hide().fadeIn(400).text(keyShot.data.ShotName);\n                    };\n\n                    // Controller to key shots link list\n                    $(document).on('click', KeyShotsDiv + ' > li', function (event) {\n                        event.preventDefault();\n\n                        //if (!$( this ).hasClass( \"here\" )){ // don't do on .here class\n                        var keyShot = videoCuePoints[$(this).index()]; // object by numerical order from videoCuePoints data set\n                        // Start load the Cue Point\n                        $(KeyShotsDiv + ' > li').removeClass(\"load\");\n                        $(this).addClass('load');\n                        // $(KeyShotsNameDiv).text('loading...');\n                        // Jump to ney key shot\n                        mainPlayer.setCurrentTime(keyShot.time).then(function (second) {\n                            LoadVideoShotSwitch(keyShot);\n                        });\n                        //}\n                    });\n\n                    // convert milliseconds to timecode\n                    var msToTime = function msToTime(duration) {\n                        var milliseconds = parseInt(duration % 1000 / 10) // parseInt\n                        ,\n                            seconds = parseInt(duration / 1000 % 60) // parseInt\n                        ,\n                            minutes = parseInt(duration / (1000 * 60) % 60); // parseInt\n                        /*, hours = parseInt((duration/(1000*60*60))%24);*/\n\n                        /*hours = (hours < 10) ? '0' + hours : hours;*/\n                        minutes = minutes < 10 ? '0' + minutes : minutes;\n                        seconds = seconds < 10 ? '0' + seconds : seconds;\n                        milliseconds = milliseconds < 10 ? '0' + milliseconds : milliseconds;\n\n                        return (/*hours + ':' + */'<span class=\"prevFrame\"></span> ' + minutes + ':' + seconds + '<span>:' + milliseconds + ' </span><span class=\"nextFrame\"></span>'\n                        );\n                    };\n\n                    // Time update + current que point recognition\n                    mainPlayer.on('timeupdate', function (data) {\n\n                        var seconds = data.seconds;\n                        if (seconds < 0.2) {\n                            seconds = 0.1;\n                        }\n                        // Refresh timecode\n                        // var timecode = msToTime(data.seconds * 1000); // get current time and convert to proper ms\n                        var timecode = msToTime(Math.ceil(seconds * 10) * 100); // get current time and convert to proper ms\n                        $('div.TimeCode').html(timecode); // put recalculated timecode to DOM\n\n                        // Looking for match each event in entire object of CuePoints\n                        for (i = 0; i < videoCuePoints.length; i++) {\n                            if (videoCuePoints[i].time >= data.seconds - 0 && videoCuePoints[i].time <= data.seconds + .8) {\n                                //console.log(\"!We got match on key \" + videoCuePoints[i].time);\n\n                                // Check the presence of .here in current li [data-time]\n                                if ($(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').hasClass(\"here\")) {\n                                    // already has .here, do nothing\n                                } else {\n                                    $(KeyShotsDiv + ' > li').removeClass(\"here\"); // delete .here from all others\n                                    $(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').addClass(\"here\"); // add .here\n                                    $(KeyShotsNameDiv).hide().fadeIn(200).html('<span style=\"color:#899ebb;\">' + videoCuePoints[i].timecode + '</span><div class=\"keyShot\"></div>' + videoCuePoints[i].data.ShotName); // load caption\n                                }\n                            }\n                        }\n                    });\n                });\n\n                // prevFrame/nextFrame buttons\n                //---------------------------------------------------\n                // looks like Vimeo.Player() can't hold values below 0.1s\n                // object can give and accept only seconds starts from 0.11s\n                // which timecode interprets as 00:00:02 and duplicates this with true 00:00:02\n                // We also have autoplay cycle problem, which starts video from the beginning at near of the end\n\n                // set on nextFrame button\n                var nextFrame = 'div#video-info span.nextFrame';\n                $(document).on('click', nextFrame, function (event) {\n                    mainPlayer.getCurrentTime().then(function (seconds) {\n                        // define very start (zero time) of playback\n                        // console.log('Seconds init as ' + seconds);\n                        if (seconds === 0 || seconds < 0.11) {\n                            // this is hack to convert all unsupported results by player < 1.1 values to 0.2 and adjust current time to the same round value\n                            mainPlayer.pause(); // init pause first time for further condition\n                            mainPlayer.setCurrentTime(0.11); // looks like Vimeo.Player(iframe); can't hold below 0.1s\n                        } else {\n                            // If player already on pause -- perform time jump\n\n                            // This duration end will be use to define when to stop iterate nextFrame button\n                            var videoDuration = 0.0;\n                            mainPlayer.getDuration().then(function (duration) {\n                                // duration = the duration of the video in seconds\n                                videoDuration = duration;\n                                // console.log('videoDuration init is ' + duration);\n                            });\n\n                            mainPlayer.getPaused().then(function (paused) {\n                                if (paused === true) {\n                                    // perform the time jump\n                                    // Set loading indicator class\n                                    var sInc = (parseFloat(seconds.toFixed(1)) + 0.1).toFixed(1);\n\n                                    // console.log('----------');\n                                    // console.log('Seconds init as ' + seconds);\n                                    // console.log('sInc is ' + sInc);\n                                    // console.log('videoDuration is ' + videoDuration);\n\n                                    if (seconds < videoDuration - 0.7) {\n                                        // this will make sure to make action and show load class only if we not reached end of the video (AND BEFORE AUTO PLAY STARTS)\n                                        $(nextFrame).addClass(\"loading\");\n                                        mainPlayer.setCurrentTime(sInc);\n                                    }\n                                } else {\n                                    mainPlayer.pause();\n                                }\n                            });\n                        }\n                    });\n                });\n\n                // set on prevFrame button\n                var prevFrame = 'div#video-info span.prevFrame';\n                $(document).on('click', prevFrame, function (event) {\n                    mainPlayer.getCurrentTime().then(function (seconds) {\n                        // define very start (zero time) of playback\n                        // console.log('Seconds init as ' + seconds);\n                        if (seconds === 0 || seconds <= 0.11) {\n                            // this is hack to prevent zero result that duplicates others < 1.1 values (unsupported by player) (those looks the same for timecode)\n                            return true;\n                        } else {\n                            // If player already on pause -- perform time jump\n                            mainPlayer.getPaused().then(function (paused) {\n                                if (paused === true) {\n                                    // perform the time jump\n                                    // Set loading indicator class\n\n                                    if (seconds > 0.2) {\n                                        // this is hack to prevent subtraction that result unsupported < 1.1 values by player\n                                        $(prevFrame).addClass(\"loading\");\n                                        var sInc = (parseFloat(seconds.toFixed(1)) - 0.1).toFixed(1);\n                                        mainPlayer.setCurrentTime(sInc);\n                                    } else {\n                                        mainPlayer.setCurrentTime(0.11); // return to default working minimal value\n                                    }\n                                    // console.log('Result as ' + seconds);\n                                } else {\n                                    mainPlayer.pause();\n                                }\n                            });\n                        }\n                    });\n                });\n            });\n        };\n    });\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//------------------------------------------------------------------------------------\n// Desktop. General\nmodule.exports = function () {\n\n    $(document).ready(function () {\n\n        tvLab.nowVid ? tvLab.loadVideoOnPage(tvLab.nowVid) : null;\n\n        tvLab.checkAlert = function (text) {\n            alert(text);\n        };\n\n        tvLab.indexOfMin = function (arr) {\n            if (arr.length === 0) {\n                return -1; // this will return on empty array\n            }\n\n            var min = arr[0];\n            var minIndex = 0;\n\n            for (var i = 1; i < arr.length; i++) {\n                if (arr[i] < min) {\n                    minIndex = i;\n                    min = arr[i];\n                }\n            }\n\n            return minIndex;\n        };\n\n        tvLab.isEmpty = function (str) {\n            return !str || 0 === str.length;\n        };\n\n        tvLab.dropTypeOnClick = function () {\n            // Drops filters state and reloads\n            $('input#set').val(\"c0d0s0a0t0v0\");\n            $('#top-panel__search').submit();\n        };\n\n        tvLab.resetSet = function (tag) {\n            // Drops filters state, reloads, select new tag\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\n            $('#set').val(\"c0d0s0a0t0v0\");\n            $('#top-panel__search').submit();\n        };\n\n        tvLab.urlVideo = function (param) {\n            // Select new video input param\n\n            var url = tvLab.nowUrl;\n            var Rgx = /(video=)(\\d*)/;\n\n            if (typeof param !== 'undefined') {\n\n                if (!url.match(Rgx)) {\n                    url = url + '&' + \"video=\" + param;\n                }\n\n                var newUrl = url.replace(Rgx, \"$1\" + param);\n                window.history.pushState(\"\", \"\", \"?\" + newUrl);\n                tvLab.nowUrl = newUrl;\n                return newUrl;\n            } else {\n\n                //--Shows URLs video param\n                var Rslt = \"\";\n                if (Rslt = url.match(Rgx)) {\n                    if (!tvLab.isEmpty(Rslt[2])) {\n                        return Rslt[2];\n                    } else {\n                        return undefined;\n                    }\n                }\n            }\n        };\n\n        tvLab.loadVideoOnClick = function (id, thisObj) {\n            // Load Video On Click + some actions on this event\n            // Update Video Input param\n            tvLab.urlVideo(id);\n\n            // Update Video Input param\n            $('input#InputVideo').val(id);\n\n            // Update Logo Button\n            //$('.tpLogo').html('<a href=\"?video=' + id + '\"></a>');\n\n            // Update Item Box Here class\n            $(\"div.item.here\").removeClass(\"here\");\n            $(thisObj).parent().parent().addClass(\"here\");\n\n            //Load Video\n            tvLab.loadVideoOnPage(id);\n        };\n\n        /**\r\n         * Video display Tag here highlight when entire document ready */\n\n        var tags_arr = tvLab.nowTags.split(' ');\n        $.each(tags_arr, function (index, value) {\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\n        });\n\n        /**\r\n         * AdjustH1InfoOutput Line */\n        //-- Remove tag on x click\n        $(\"div#main-output > h1.state-info > span.Tags > span.tag span.x-close\").on(\"click\", function (event) {\n\n            // Recognize tag text\n            var TagText = $(this).parent().text();\n            TagText = TagText.replace(\"⨯\", \"\");\n            TagText = TagText.replace(\"# \", \"\");\n\n            // Remove tag\n            $(\"ul.top-panel__search-field\").tagit(\"removeTagByLabel\", TagText);\n\n            // Remove div tag\n            $(this).parent().fadeOut(200, function () {\n                TagText.remove();\n            });\n            // Submit with delay\n            setTimeout(function () {\n                $('#top-panel__search').submit();\n            }, 100);\n        });\n\n        /**\r\n         * Video display tag click event */\n\n        $(document).on('click', 'a.tag', function (event) {\n            event.preventDefault();\n            var tag = $(event.target).data('tag');\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\n            $('#top-panel__search').submit();\n        });\n\n        // Tags overview Tag click event\n        $(document).on('click', 'a.tag-item', function (event) {\n            event.preventDefault();\n            var tag = $(event.target).data('tag');\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\n            // $('input#InputVideo').val(\"\"); // Drop displayed video to \"\"\n            $('#top-panel__search').submit();\n        });\n\n        /**\r\n         *  Accordion Left Panel with Tags overview\r\n         *  Tag \"here\" highlighted with entire document */\n\n        $.each(tvLab.nowTags.split(' '), function (index, value) {\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\n        });\n\n        // tvLab.menuState = 3; // is works\n        // let menuState = document.cookie[document.cookie.length-1];\n        // COOKIE NOT WORKING WITH ACCORDION\n\n        $(\"aside#left-panel div.accordion\").accordion({\n            collapsible: true,\n            active: tvLab.menuState,\n            heightStyle: \"content\",\n\n            create: function create(event, ui) {\n                $('aside#left-panel div.accordion').css(\"display\", \"block\");\n                // console.log('accordion create: '+ $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\"), tvLab.menuState);\n            },\n\n            activate: function activate(event, ui) {\n                var tagMenuActive = $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\");\n                document.cookie = \"TagMenuState=\" + tagMenuActive;\n            }\n\n        });\n\n        $('#container').waterfall({\n            itemCls: 'item',\n            fitWidth: false,\n            colWidth: 319,\n            gutterWidth: 19,\n            gutterHeight: 15,\n            align: 'center',\n            minCol: 1,\n            maxCol: 3,\n            debug: false,\n            checkImagesLoaded: false,\n            callbacks: {\n\n                loadingFinished: function loadingFinished($loading, isBeyondMaxPage) {\n\n                    !isBeyondMaxPage ? $loading.fadeOut() : $loading.remove();\n\n                    //-- Check for not selected video\n                    if (tvLab.urlVideo() === undefined) {\n                        // If url video param does not exist\n                        if ($(\".waterfall-container .item.here\").length === 0) {\n                            // if .box.here does not exist too\n                            $(\".waterfall-container .item:first-child\").addClass(\"here\"); // add class to first one\n                        }\n                    }\n\n                    $(document).on('click', '.waterfall-container a.wf-load-video', function (event) {\n                        event.preventDefault();\n                        tvLab.loadVideoOnClick($(this).data('id'), $(this));\n                    });\n                },\n                renderData: function renderData(data, dataType) {\n\n                    if (data.pages === data.page) {\n                        $('#container').waterfall('pause', function () {\n                            $('#waterfall-message').html('<!--No more result from database-->');\n                        });\n                    }\n\n                    if (!tvLab.nowVid) {\n                        if (data.page === 1) {\n                            tvLab.loadVideoOnPage(data.FirstVideo);\n                        }\n                    }\n\n                    if (dataType === 'json' || dataType === 'jsonp') {\n                        // json or jsonp format\n                        var tpl = $('#waterfall-tpl').html();\n                        var template = Handlebars.compile(tpl);\n                        return template(data);\n                    } else {\n                        // html format\n                        return data;\n                    }\n                }\n            },\n            path: function path(page) {\n                return 'desktop/json/waterfall_page.php?' + tvLab.nowUrl + '&page=' + page;\n            }\n        });\n    });\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//------------------------------------------------------------------------------------\n// Top panel\nmodule.exports = function () {\n    $(document).ready(function () {\n\n        //------------------------------------------------------------------------------------\n        // Filter Buttons Assemble\n\n        var mQ;\n\n        // screw-default-buttons init\n        $('input:radio').screwDefaultButtons({\n            image: 'url(\"img/radioSmall.jpg\")',\n            width: 40,\n            height: 40\n        });\n\n        $('input:checkbox').screwDefaultButtons({\n            image: 'url(\"img/checkboxSmall.jpg\")',\n            width: 40,\n            height: 40\n        });\n\n        // Hide before build completely\n        $('.top-panel__search-filters_fixwrap').css(\"display\", \"block\");\n\n        // Sync with php passed url 'set code'\n        tvLab.nowSet.match(/[\\d\\w]{12}/) ? mQ = tvLab.nowSet : mQ = \"c0d0s0a0t0v0\";\n\n        // Shorthand for submit\n        tvLab.mqSetSubmit = function () {\n            $('#set').val(mQ);\n            $('#top-panel__search').submit();\n        };\n\n        // Check the 'chk' in form, if so -- changing filter code mQ\n        $('#comp')[0].checked === true ? mQ = mQ.replace(/c0/, 'c1') : null;\n        $('#3d')[0].checked === true ? mQ = mQ.replace(/d0/, 'd1') : null;\n        $('#sim')[0].checked === true ? mQ = mQ.replace(/s0/, 's1') : null;\n        $('#anim')[0].checked === true ? mQ = mQ.replace(/a0/, 'a1') : null;\n        $('#stpm')[0].checked === true ? mQ = mQ.replace(/t0/, 't1') : null;\n        $('#vid')[0].checked === true ? mQ = mQ.replace(/v0/, 'v1') : null;\n\n        // Event Callbacks\n        $('.styledCheckbox:has(#md)').on('click', function () {\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#comp)').on('click', function () {\n            if ($('#comp').is(':checked')) {\n                if (!mQ.match(/c1/)) {\n                    mQ = mQ.replace(/c0/, 'c1');\n                }\n            } else {\n                if (!mQ.match(/c0/)) {\n                    mQ = mQ.replace(/c1/, 'c0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#3d)').on('click', function () {\n            if ($('#3d').is(':checked')) {\n                if (!mQ.match(/d1/)) {\n                    mQ = mQ.replace(/d0/, 'd1');\n                }\n            } else {\n                if (!mQ.match(/d0/)) {\n                    mQ = mQ.replace(/d1/, 'd0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#sim)').on('click', function () {\n            if ($('#sim').is(':checked')) {\n                if (!mQ.match(/s1/)) {\n                    mQ = mQ.replace(/s0/, 's1');\n                }\n            } else {\n                if (!mQ.match(/s0/)) {\n                    mQ = mQ.replace(/s1/, 's0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#anim)').on('click', function () {\n            if ($('#anim').is(':checked')) {\n                if (!mQ.match(/a1/)) {\n                    mQ = mQ.replace(/a0/, 'a1');\n                }\n            } else {\n                if (!mQ.match(/a0/)) {\n                    mQ = mQ.replace(/a1/, 'a0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#stpm)').on('click', function () {\n            if ($('#stpm').is(':checked')) {\n                if (!mQ.match(/t1/)) {\n                    mQ = mQ.replace(/t0/, 't1');\n                }\n            } else {\n                if (!mQ.match(/t0/)) {\n                    mQ = mQ.replace(/t1/, 't0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        $('.styledCheckbox:has(#vid)').on('click', function () {\n            if ($('#vid').is(':checked')) {\n                if (!mQ.match(/v1/)) {\n                    mQ = mQ.replace(/v0/, 'v1');\n                }\n            } else {\n                if (!mQ.match(/v0/)) {\n                    mQ = mQ.replace(/v1/, 'v0');\n                }\n            }\n            tvLab.mqSetSubmit();\n        });\n\n        //------------------------------------------------------------------------------------\n        // Tagit auto complete. top panel input area\n\n        tvLab.sampleTags = ['realism', 'abstract', 'minimalism', 'futurism', 'surrealism', 'contemporary', 'cinematic', 'Cartoon', 'Art', 'Beauty', 'Adventures', 'Story', 'Fantasy', 'Spiritual', 'Culture', 'Sport', 'Games', 'Enertament', 'Mans', 'Womens', 'Comedy', 'Show', 'Cinema', 'Fun', 'Weird', 'News', 'Info', 'Promo', 'Test', 'Science', 'Education', 'History', 'Political', 'Social', 'Nature', 'Health', 'Industry', 'Buisness', 'Finance', 'Services', 'Vehicles', 'Technology', 'Digital', 'CG', 'Crafts', 'War', 'Criminal'];\n\n        //-------------------------------\n        // Single field\n        //-------------------------------\n        $('ul.top-panel__search-field').tagit({\n            showAutocompleteOnFocus: false,\n            autocomplete: { delay: 0, minLength: 0 },\n            tagLimit: 3,\n            availableTags: tvLab.sampleTags,\n            singleField: true,\n            singleFieldNode: $('input.top-panel__search-field'),\n            afterTagRemoved: function afterTagRemoved(evt, ui) {\n                //document.getElementById(\"top-panel__search\").submit();\n            }\n\n        });\n\n        //-------------------------------\n        // Preloading data in markup\n        //-------------------------------\n        $('#myULTags').tagit({\n            availableTags: tvLab.sampleTags, // this param is of course optional. it's for autocomplete.\n            // configure the name of the input field (will be submitted with form), default: item[tags]\n            itemName: 'item',\n            fieldName: 'tags'\n        });\n\n        //-------------------------------\n        // Tag events\n        //-------------------------------\n        tvLab.eventTags = $('#eventTags');\n\n        tvLab.addEvent = function (text) {\n            $('#events_container').append(text + '<br>');\n        };\n\n        tvLab.eventTags.tagit({\n            availableTags: tvLab.sampleTags,\n            beforeTagAdded: function beforeTagAdded(evt, ui) {\n                if (!ui.duringInitialization) {\n                    tvLab.addEvent('beforeTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\n                }\n            },\n            afterTagAdded: function afterTagAdded(evt, ui) {\n                if (!ui.duringInitialization) {\n                    tvLab.addEvent('afterTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\n                }\n            },\n            beforeTagRemoved: function beforeTagRemoved(evt, ui) {\n                tvLab.addEvent('beforeTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\n            },\n            afterTagRemoved: function afterTagRemoved(evt, ui) {\n                tvLab.addEvent('afterTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\n            },\n            onTagClicked: function onTagClicked(evt, ui) {\n                tvLab.addEvent('onTagClicked: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\n            },\n            onTagExists: function onTagExists(evt, ui) {\n                tvLab.addEvent('onTagExists: ' + tvLab.eventTags.tagit('tagLabel', ui.existingTag));\n            }\n        });\n\n        //-------------------------------\n        // Read-only\n        //-------------------------------\n        $('#readOnlyTags').tagit({\n            readOnly: false\n        });\n\n        //-------------------------------\n        // Tag-it methods\n        //-------------------------------\n        $('#methodTags').tagit({\n            availableTags: tvLab.sampleTags\n        });\n\n        //-------------------------------\n        // Allow spaces without quotes.\n        //-------------------------------\n        $('#allowSpacesTags').tagit({\n            availableTags: tvLab.sampleTags,\n            allowSpaces: true\n        });\n\n        //-------------------------------\n        // Remove confirmation\n        //-------------------------------\n        $('#removeConfirmationTags').tagit({\n            availableTags: tvLab.sampleTags,\n            removeConfirmation: true\n        });\n    });\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//------------------------------------------------------------------------------------\n// Television Lab Player link with waterfall output grid: prev/next video bond ability\nmodule.exports = function () {\n    $(document).ready(function () {\n        // References for Vimeo Player API\n        // https://github.com/vimeo/player.js\n\n        tvLab.setAutoPlayUI = function (type) {\n            // \"Cycle\" or \"Next\"\n            var AutoPlayButton = $(\"div#MPC div.AutoPlay\");\n\n            if (type === \"Next\") {\n                AutoPlayButton.removeClass(\"Cycle\");\n                AutoPlayButton.addClass(\"Next\");\n            } else if (type === \"Cycle\") {\n                AutoPlayButton.removeClass(\"Next\");\n                AutoPlayButton.addClass(\"Cycle\");\n            }\n        };\n\n        tvLab.videoGoAndPlay = function (state) {\n            var this_Vid_Obj = $(\"#container.waterfall-container div.item.here\");\n            var first_Vid_Obj = $(\"#container.waterfall-container\").children().first();\n            var next_Vid_Obj = this_Vid_Obj.next();\n            var prev_Vid_Obj = this_Vid_Obj.prev();\n            var next_Vid_Id = next_Vid_Obj.data(\"id\");\n            var prev_Vid_Id = prev_Vid_Obj.data(\"id\");\n\n            if (state === \"Next\") {\n                if (typeof next_Vid_Id !== 'undefined') {\n                    this_Vid_Obj.removeClass(\"here\");\n                    next_Vid_Obj.addClass(\"here\");\n                    tvLab.loadVideoOnPage(next_Vid_Id);\n                } else {\n                    // If no data-id then drop .here class to the first element\n                    this_Vid_Obj.removeClass(\"here\");\n                    first_Vid_Obj.addClass(\"here\");\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\n                }\n            }\n\n            if (state === \"Prev\") {\n                if (typeof prev_Vid_Id !== 'undefined') {\n                    this_Vid_Obj.removeClass(\"here\");\n                    prev_Vid_Obj.addClass(\"here\");\n                    tvLab.loadVideoOnPage(prev_Vid_Id);\n                } else {\n                    // If no data-id then drop .here class to the first element\n                    this_Vid_Obj.removeClass(\"here\");\n                    first_Vid_Obj.addClass(\"here\");\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\n                }\n            }\n        };\n\n        /* Desktop player listeners extends Main Player */\n        $(document).on('click', 'div#MPC div#NextVideo', function (event) {\n            event.preventDefault();\n            tvLab.videoGoAndPlay(\"Next\");\n        });\n\n        $(document).on('click', 'div#MPC div#PrevVideo', function (event) {\n            event.preventDefault();\n            tvLab.videoGoAndPlay(\"Prev\");\n        });\n    });\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.008d5bf16f353a2380d6.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed74579a859779cc0fd2","\"use strict\";\r\n\r\nconst loadVideo = require(\"./load-video\");\r\nconst desktop = require(\"./desktop\");\r\nconst topPanel = require(\"./top-panel\");\r\nconst mainPlayer = require(\"./main-player\");\r\n\r\nloadVideo();\r\ndesktop();\r\ntopPanel();\r\nmainPlayer();\r\n\r\n// module.exports.tester = tester;\n\n\n// WEBPACK FOOTER //\n// ./desktop/js/static/app.js","\r\n//------------------------------------------------------------------------------------\r\n// Async Display Video On page + build show video module\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        tvLab.loadVideoOnPage = function (VideoId) {\r\n            'use strict';\r\n\r\n            // set the background gif\r\n            $('div#preview-window').css('background-image', 'url(_global/img/loader_0.gif)');\r\n\r\n            $.ajax('desktop/ajax/video.php', {\r\n                success: function (response) {\r\n\r\n                    // $('#preview-window').hide().fadeIn(150);\r\n\r\n                    $('#preview-window').html('<div class=\"box\">' +\r\n                        '<iframe src=\"//player.vimeo.com/video/' + VideoId +\r\n                        '?title=0&byline=0&portrait=0&autoplay=1\"  frameborder=\"0\" ' +\r\n                        'webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\r\n                        '</iframe></div>')\r\n                        // .load(function (e) {\r\n                        // $(this).contents().find('body').addClass('Z');})\r\n                    ;\r\n\r\n                    $('#video-info').hide().html(response).fadeIn(100);\r\n\r\n                    // remove background image\r\n                    setTimeout(function () {\r\n                        $('div#preview-window').css('background-image', 'none');\r\n                    }, 1000);\r\n                },\r\n                data: {\"VideoId\": VideoId},\r\n                cache: false\r\n\r\n            }).done(function () {\r\n\r\n                //-------- When Ajax Video Loaded\r\n                // This will fire when video loaded\r\n\r\n                // Highlight tags\r\n                var tags_arr = tvLab.nowTags.split(' ');\r\n                $.each(tags_arr, function (index, value) {\r\n                    $('a.tag[data-tag=' + value + ']').addClass(\"here\");\r\n                });\r\n\r\n                // Play-Pause of top panel player\r\n                var iframe = document.querySelector('iframe');\r\n                var mainPlayer = new Vimeo.Player(iframe);\r\n                var playPauseBt = $(\"div#MPC div#PlayPause\");\r\n                var init = mainPlayer; // initialization of mainPlayer object, which is inactive till first usage\r\n\r\n                // Time code result: playback is jumpy, no way to make decent time code\r\n                /*        mainPlayer.on('timeupdate', function(data) {\r\n                 console.log(data.seconds);\r\n                 $('div.timecode').html(\"000\" + data.seconds);\r\n                 });*/\r\n\r\n                // Set On PlayPause Button Event\r\n                $(document).on('click', 'div#MPC div#PlayPause', function (event) {\r\n                    event.preventDefault();\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        if (paused === true) {\r\n                            mainPlayer.play();\r\n                        } else {\r\n                            mainPlayer.pause();\r\n                        }\r\n                    }).catch(function (error) {  // an error occurred\r\n                        console.log(\"an error occurred during on('click') mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                //------ Player play/pause Actions\r\n                var playPauseSwitch = function (paused_state) {\r\n                    if (paused_state === true) {\r\n                        // Pause was ON, switch to play\r\n                        playPauseBt.removeClass(\"pause\");\r\n                        playPauseBt.addClass(\"play\");\r\n                        //console.log(\"Pause was ON. Show Play Button\");\r\n                    } else {\r\n                        // Pause was OFF, turn it on\r\n                        playPauseBt.removeClass(\"play\");\r\n                        playPauseBt.addClass(\"pause\");\r\n                        //console.log(\"Pause was OFF. Show Pause Button\");\r\n                    }\r\n                }\r\n\r\n                mainPlayer.on('play', function (data) {\r\n                    // data is an object containing properties specific to that event (play data: duration, percent, seconds)\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                mainPlayer.on('pause', function (data) {\r\n                    // data is an object containing properties specific to that event\r\n                    mainPlayer.getPaused().then(function (paused) {\r\n                        playPauseSwitch(paused);\r\n                    }).catch(function (error) {\r\n                        // an error occurred\r\n                        console.log(\"an error occurred during mainPlayer.getPaused()\");\r\n                    });\r\n                });\r\n\r\n                // Init AutoPlay param and UI by getting tvLab.autoPlayState from cookie (php-cookie-pipe).\r\n                if (tvLab.autoPlayState === 1) {\r\n                    tvLab.setAutoPlayUI(\"Next\");\r\n                    mainPlayer.setLoop(false);\r\n                    //console.log(\"init tvLab.autoPlayState == 1\");\r\n                } else {\r\n                    tvLab.setAutoPlayUI(\"Cycle\");\r\n                    mainPlayer.setLoop(true);\r\n                    //console.log(\"init tvLab.autoPlayState == 0\");\r\n                }\r\n\r\n\r\n                //------ Auto Next Play Button\r\n                // AutoPlay button on.click Actions\r\n                $(document).on('click', 'div#MPC div.AutoPlay', function (event) {\r\n                    event.preventDefault();\r\n                    if (tvLab.autoPlayState === 1) {\r\n                        // If tvLab.autoPlayState toggle was ON, then switch this back to 0, Cycle\r\n                        mainPlayer.setLoop(true).then(function (loop) { // Set player loop on\r\n                            tvLab.setAutoPlayUI(\"Cycle\"); // Change UI\r\n                            tvLab.autoPlayState = 0; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    } else {\r\n                        // If tvLab.autoPlayState toggle is ON, then switch this to Cycle\r\n                        mainPlayer.setLoop(false).then(function (loop) { // Set player loop off\r\n                            tvLab.setAutoPlayUI(\"Next\"); // Change UI\r\n                            tvLab.autoPlayState = 1; // Change UI state\r\n                            document.cookie = \"tvLab.autoPlayState=\" + tvLab.autoPlayState; // Change cookie state\r\n                            //console.log(\"Set loop off, autoplay on: player, UI, var, cookie.\");\r\n                        }).catch(function (error) {\r\n                            console.log(\"an error occurred during mainPlayer.setLoop(true)\");\r\n                        });\r\n                    }\r\n                });\r\n\r\n                //------ Auto Next Play Video Functionality\r\n                mainPlayer.on('ended', function (data) { // This event fires only if loop is off\r\n                    // data is an object containing properties specific to that event\r\n                    tvLab.videoGoAndPlay(\"Next\");\r\n                });\r\n\r\n\r\n                //------ CuePoints Prev/Next init\r\n\r\n                // 1. Get all CuePoints for video\r\n                //console.log('1. Get all CuePoints for video.');\r\n                mainPlayer.getCuePoints().then(function (cuePoints) {\r\n                    //console.log('Primary collection getCuePoints() worked fine: ');\r\n                    // console.log(cuePoints);\r\n\r\n                    // 2. Delete all existing CuePoints for loaded media\r\n                    if (cuePoints.length > 0) {\r\n                        // console.log('Some CuePoints already exist for loaded media.');\r\n                        // console.log('Deleting all existing CuePoints for loaded media');\r\n                        for (var i = 0; i < cuePoints.length; i++) {\r\n\r\n                            mainPlayer.removeCuePoint(cuePoints[i].id).then(function (id) { // cuePoints = an array of cue point objects\r\n                                // console.log('cue point ' + id + ' was removed successfully: ');\r\n                            }).catch(function (error) {\r\n                                switch (error.name) {\r\n                                    case 'UnsupportedError':\r\n                                        console.log('cue points are not supported with the current player or browser');\r\n                                        break;\r\n                                    case 'InvalidCuePoint':\r\n                                        console.log('a cue point with the id passed wasn’t found');\r\n                                        break;\r\n                                    default:\r\n                                        console.log('some other error occurred');\r\n                                        break;\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        //console.log('No CuePoints found for loaded media.');\r\n                    }\r\n\r\n                }).catch(function (error) { // catch for mainPlayer.getCuePoints()\r\n                    switch (error.name) {\r\n                        case 'UnsupportedError':\r\n                            console.log('cue points are not supported with the current player or browser');\r\n                            break;\r\n                        default:\r\n                            console.log('some other error occurred during mainPlayer.getCuePoints()');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n\r\n                // ------------------------------------------------\r\n                // 3. Assign all CuePoints in cycle for loaded media (add CuePoints for current video) from DB data\r\n\r\n                mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                    // this getDuration callback need to calculate time point for test demo\r\n                    // and it will be replaced by 'DB CuePoints data' callback\r\n\r\n                    var equalPart = Math.floor(parseInt(duration) / 5);\r\n                    var videoCuePointsForDemo = [1, equalPart * 2, equalPart * 3, equalPart * 4, duration - 1];\r\n\r\n                    // console.log('videoCuePointsForDemo: '+videoCuePointsForDemo);\r\n\r\n                    // temp data object\r\n                    var videoCuePoints = [\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[0],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"KeyShot-1\",\r\n                                \"ShotName\": \"First key shot looks nice.\" // this is \"customKey\": \"customValue\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[1],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"ShotTag\",\r\n                                \"ShotName\": \"This one not bad too!\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-1\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[2],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CustomTag\",\r\n                                \"ShotName\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-2\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[3],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"CoolTag\",\r\n                                \"ShotName\": \"Composition and color are worth to checkout.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-3\"\r\n                        },\r\n                        {\r\n                            \"time\": videoCuePointsForDemo[4],\r\n                            \"data\": {\r\n                                \"ShotTag\": \"LastKeyShot\",\r\n                                \"ShotName\": \"Well, this is just last key shot in this cue.\"\r\n                            },\r\n                            \"id\": \"videoCuePoint-0\"\r\n                        }\r\n                    ];\r\n\r\n                    // Adding timecode formatted time\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n\r\n                        var mins = Math.floor(videoCuePoints[i].time / 60 % 60).toString();\r\n                        var secs = Math.floor(videoCuePoints[i].time % 60).toString();\r\n\r\n                        if (mins.length < 2) {\r\n                            mins = '0' + mins;\r\n                        }\r\n\r\n                        if (secs.length < 2) {\r\n                            secs = '0' + secs;\r\n                        }\r\n\r\n                        videoCuePoints[i].timecode = mins + ':' + secs;\r\n                    }\r\n\r\n                    // Debug timecode list\r\n                    /*for (i = 0; i < videoCuePoints.length; i++) {\r\n                     console.log(videoCuePoints[i].timecode);\r\n                     }*/\r\n\r\n\r\n                    // Make short version of data set\r\n                    var cuePointsIdList = [];\r\n                    for (var i = 0; i < videoCuePoints.length; i++) {\r\n                        cuePointsIdList.push(videoCuePoints[i].time);\r\n                    }\r\n\r\n                    //  Add videoCuePoints items from data set to video player\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        // console.log('----- begin extraction of new videoCuePoints item ' + i + ' ... ');\r\n\r\n                        mainPlayer.addCuePoint(videoCuePoints[i].time, videoCuePoints[i].data).then(function (id) {\r\n                            //console.log('cue point ' + i + ' was added successfully with id: ' + id);\r\n\r\n                        });\r\n                    }\r\n\r\n                    // 4. Get all CuePoints again\r\n                    mainPlayer.getCuePoints().then(function (videoCuePoints) {\r\n                        // 5. Make CuePoints Listener action (for visual indicating).\r\n                        if (videoCuePoints.length > 0) {\r\n                            //console.log('There is some final videoCuePoints in object.');\r\n                        } else {\r\n                            //console.log('Final videoCuePoints not found in object.');\r\n                        }\r\n                    });\r\n\r\n                    var nearestCuePoint = 0,\r\n                        nearestIndex = 0,\r\n                        nextCuePoint = 0,\r\n                        nextCuePointIndex = 0,\r\n                        prevCuePoint = 0,\r\n                        prevCuePointIndex = 0,\r\n                        thisIndex = 0,\r\n                        absDiffArr = [];\r\n\r\n                    var KeyShotsDiv = 'div#video-info > .left > div.KeyShots > ul';\r\n                    var KeyShotsNameDiv = 'div#video-info > .left > div.KeyShots > div.ShotName > span';\r\n\r\n                    // div#NextShot controller\r\n                    $(document).on('click', 'div#MPC div#NextShot', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        var buttonNextShot = $(this);\r\n                        buttonNextShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct nextCuePoint.\r\n                            if (currentTime * 1000 >= nearestCuePoint * 1000) {\r\n                                nextCuePointIndex = nearestIndex + 1; // just NEXT item in array\r\n\r\n                                // if we pass the nearest point, next point will be just NEXT item in array\r\n                                if (nextCuePointIndex >= videoCuePoints.length) { // But. If this index went beyond array,\r\n                                    nextCuePoint = videoCuePoints[0]; // then return to first cuePoint\r\n                                    thisIndex = 0;\r\n                                } else {\r\n                                    nextCuePoint = videoCuePoints[nextCuePointIndex];\r\n                                    thisIndex = nextCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                nextCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current nextCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(nextCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonNextShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(nextCuePoint);\r\n                                //console.log('Set time by div#NextShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n                    // div#PrevShot controller\r\n                    $(document).on('click', 'div#MPC div#PrevShot', function (event) {\r\n                        event.preventDefault();\r\n                        var buttonPrevShot = $(this);\r\n                        buttonPrevShot.addClass(\"disabled\");\r\n\r\n                        // Get Current Time to calculate where we are and where to go\r\n                        mainPlayer.getCurrentTime().then(function (currentTime) {\r\n\r\n                            // Find nearest point for currentTime\r\n                            // Find absolute difference between currentTime and all cuePoints in data set\r\n                            for (i = 0; i < cuePointsIdList.length; i++) {\r\n                                absDiffArr[i] = Math.abs(cuePointsIdList[i] - currentTime);\r\n                            }\r\n                            nearestIndex = tvLab.indexOfMin(absDiffArr); // Get Index of nearest element\r\n                            nearestCuePoint = cuePointsIdList[nearestIndex]; // Get nearest CuePoint through this Index\r\n\r\n                            // Compare currentTime and nearestCuePoint to define correct prevCuePoint.\r\n                            if (currentTime * 1000 <= nearestCuePoint * 1000 + 1000) { // add additional delay for back clicking\r\n                                prevCuePointIndex = nearestIndex - 1;\r\n\r\n                                // if we pass the nearest point, prev point will be just prev item in array\r\n                                if (prevCuePointIndex < 0) { // But. If this index went beyond array, then return to last cuePoint in array\r\n                                    prevCuePointIndex = videoCuePoints.length - 1;\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                } else {\r\n                                    prevCuePoint = videoCuePoints[prevCuePointIndex];\r\n                                    thisIndex = prevCuePointIndex;\r\n                                }\r\n                            } else {\r\n                                prevCuePoint = videoCuePoints[nearestIndex]; // if we are after nearest point at this moment, prev point will be THIS current nearestPoint\r\n                                thisIndex = nearestIndex;\r\n                            }\r\n\r\n\r\n                            // Start load the Cue Point ( VideoShot )\r\n                            $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                            $(KeyShotsDiv + ' > li').eq(thisIndex).addClass('load');\r\n                            // $(KeyShotsNameDiv).text('loading...');\r\n\r\n                            // Set current prevCuePoint time\r\n\r\n                            mainPlayer.setCurrentTime(prevCuePoint.time).then(function (second) {\r\n                                //mainPlayer.pause();\r\n                                buttonPrevShot.removeClass(\"disabled\");\r\n                                $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                                LoadVideoShotSwitch(prevCuePoint);\r\n                                // console.log('Set time by div#PrevShot to ' + second);\r\n                            });\r\n\r\n                        });\r\n                    });\r\n\r\n\r\n                    // Set the first ShotName in videoCuePoints and set all the LI\r\n                    $(KeyShotsNameDiv).html('<span style=\"color:#878787;\">' + videoCuePoints.length + ' shot points...</span>');\r\n                    // $('div#video-info > .left > div.KeyShots > div.ShotName').hide();\r\n\r\n                    // Set the LI elements\r\n                    for (i = 0; i < videoCuePoints.length; i++) {\r\n                        $(KeyShotsDiv).append('<li data-time=\"' + videoCuePoints[i].time + '\">' + videoCuePoints[i].data.ShotTag + '</li>');\r\n                    }\r\n\r\n                    var LoadVideoShotSwitch = function (keyShot) { // keyShot = object by numerical order from videoCuePoints data set\r\n                        // Write Shot Name in state text block\r\n                        // remove old .here\r\n                        $(KeyShotsDiv + ' > li.here').removeClass(\"here\");\r\n                        // set new .here and delete .load\r\n                        $(KeyShotsDiv + ' > li[data-time=' + keyShot.time + ']').removeClass(\"load\").addClass(\"here\");\r\n                        // $(KeyShotsNameDiv).hide().fadeIn(400).text(keyShot.data.ShotName);\r\n                    }\r\n\r\n                    // Controller to key shots link list\r\n                    $(document).on('click', KeyShotsDiv + ' > li', function (event) {\r\n                        event.preventDefault();\r\n\r\n                        //if (!$( this ).hasClass( \"here\" )){ // don't do on .here class\r\n                        var keyShot = videoCuePoints[$(this).index()]; // object by numerical order from videoCuePoints data set\r\n                        // Start load the Cue Point\r\n                        $(KeyShotsDiv + ' > li').removeClass(\"load\");\r\n                        $(this).addClass('load');\r\n                        // $(KeyShotsNameDiv).text('loading...');\r\n                        // Jump to ney key shot\r\n                        mainPlayer.setCurrentTime(keyShot.time).then(function (second) {\r\n                            LoadVideoShotSwitch(keyShot);\r\n                        });\r\n                        //}\r\n                    });\r\n\r\n                    // convert milliseconds to timecode\r\n                    var msToTime = function (duration) {\r\n                        var milliseconds = parseInt((duration % 1000) / 10) // parseInt\r\n                            , seconds = parseInt((duration / 1000) % 60) // parseInt\r\n                            , minutes = parseInt((duration / (1000 * 60)) % 60); // parseInt\r\n                        /*, hours = parseInt((duration/(1000*60*60))%24);*/\r\n\r\n                        /*hours = (hours < 10) ? '0' + hours : hours;*/\r\n                        minutes = (minutes < 10) ? '0' + minutes : minutes;\r\n                        seconds = (seconds < 10) ? '0' + seconds : seconds;\r\n                        milliseconds = (milliseconds < 10) ? '0' + milliseconds : milliseconds;\r\n\r\n                        return /*hours + ':' + */'<span class=\"prevFrame\"></span> ' + minutes + ':' + seconds + '<span>:' + milliseconds + ' </span><span class=\"nextFrame\"></span>';\r\n                    }\r\n\r\n                    // Time update + current que point recognition\r\n                    mainPlayer.on('timeupdate', function (data) {\r\n\r\n                        var seconds = data.seconds;\r\n                        if (seconds < 0.2) {\r\n                            seconds = 0.1;\r\n                        }\r\n                        // Refresh timecode\r\n                        // var timecode = msToTime(data.seconds * 1000); // get current time and convert to proper ms\r\n                        var timecode = msToTime(Math.ceil(seconds * 10) * 100); // get current time and convert to proper ms\r\n                        $('div.TimeCode').html(timecode); // put recalculated timecode to DOM\r\n\r\n                        // Looking for match each event in entire object of CuePoints\r\n                        for (i = 0; i < videoCuePoints.length; i++) {\r\n                            if (videoCuePoints[i].time >= data.seconds - 0 && videoCuePoints[i].time <= data.seconds + .8) {\r\n                                //console.log(\"!We got match on key \" + videoCuePoints[i].time);\r\n\r\n                                // Check the presence of .here in current li [data-time]\r\n                                if ($(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').hasClass(\"here\")) {\r\n                                    // already has .here, do nothing\r\n                                } else {\r\n                                    $(KeyShotsDiv + ' > li').removeClass(\"here\"); // delete .here from all others\r\n                                    $(KeyShotsDiv + ' > li[data-time=' + videoCuePoints[i].time + ']').addClass(\"here\"); // add .here\r\n                                    $(KeyShotsNameDiv).hide().fadeIn(200).html('<span style=\"color:#899ebb;\">' + videoCuePoints[i].timecode + '</span><div class=\"keyShot\"></div>' + videoCuePoints[i].data.ShotName); // load caption\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n                // prevFrame/nextFrame buttons\r\n                //---------------------------------------------------\r\n                // looks like Vimeo.Player() can't hold values below 0.1s\r\n                // object can give and accept only seconds starts from 0.11s\r\n                // which timecode interprets as 00:00:02 and duplicates this with true 00:00:02\r\n                // We also have autoplay cycle problem, which starts video from the beginning at near of the end\r\n\r\n                // set on nextFrame button\r\n                var nextFrame = 'div#video-info span.nextFrame';\r\n                $(document).on('click', nextFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds < 0.11) { // this is hack to convert all unsupported results by player < 1.1 values to 0.2 and adjust current time to the same round value\r\n                            mainPlayer.pause(); // init pause first time for further condition\r\n                            mainPlayer.setCurrentTime(0.11); // looks like Vimeo.Player(iframe); can't hold below 0.1s\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n\r\n                            // This duration end will be use to define when to stop iterate nextFrame button\r\n                            var videoDuration = 0.0;\r\n                            mainPlayer.getDuration().then(function (duration) { // duration = the duration of the video in seconds\r\n                                videoDuration = duration;\r\n                                // console.log('videoDuration init is ' + duration);\r\n                            });\r\n\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n                                    var sInc = (parseFloat(seconds.toFixed(1)) + 0.1).toFixed(1);\r\n\r\n                                    // console.log('----------');\r\n                                    // console.log('Seconds init as ' + seconds);\r\n                                    // console.log('sInc is ' + sInc);\r\n                                    // console.log('videoDuration is ' + videoDuration);\r\n\r\n                                    if (seconds < videoDuration - 0.7) { // this will make sure to make action and show load class only if we not reached end of the video (AND BEFORE AUTO PLAY STARTS)\r\n                                        $(nextFrame).addClass(\"loading\");\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    }\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // set on prevFrame button\r\n                var prevFrame = 'div#video-info span.prevFrame';\r\n                $(document).on('click', prevFrame, function (event) {\r\n                    mainPlayer.getCurrentTime().then(function (seconds) {\r\n                        // define very start (zero time) of playback\r\n                        // console.log('Seconds init as ' + seconds);\r\n                        if (seconds === 0 || seconds <= 0.11) { // this is hack to prevent zero result that duplicates others < 1.1 values (unsupported by player) (those looks the same for timecode)\r\n                            return true;\r\n                        } else {\r\n                            // If player already on pause -- perform time jump\r\n                            mainPlayer.getPaused().then(function (paused) {\r\n                                if (paused === true) {\r\n                                    // perform the time jump\r\n                                    // Set loading indicator class\r\n\r\n                                    if (seconds > 0.2) { // this is hack to prevent subtraction that result unsupported < 1.1 values by player\r\n                                        $(prevFrame).addClass(\"loading\");\r\n                                        var sInc = (parseFloat(seconds.toFixed(1)) - 0.1).toFixed(1);\r\n                                        mainPlayer.setCurrentTime(sInc);\r\n                                    } else {\r\n                                        mainPlayer.setCurrentTime(0.11); // return to default working minimal value\r\n                                    }\r\n                                    // console.log('Result as ' + seconds);\r\n                                } else {\r\n                                    mainPlayer.pause();\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n\r\n            });\r\n\r\n        };\r\n\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./desktop/js/static/load-video.js","\r\n//------------------------------------------------------------------------------------\r\n// Desktop. General\r\nmodule.exports = function() {\r\n\r\n    $(document).ready(function () {\r\n\r\n        tvLab.nowVid ? tvLab.loadVideoOnPage(tvLab.nowVid) : null;\r\n\r\n        tvLab.checkAlert = function (text) {\r\n            alert(text);\r\n        };\r\n\r\n        tvLab.indexOfMin = function (arr) {\r\n            if (arr.length === 0) {\r\n                return -1; // this will return on empty array\r\n            }\r\n\r\n            var min = arr[0];\r\n            var minIndex = 0;\r\n\r\n            for (var i = 1; i < arr.length; i++) {\r\n                if (arr[i] < min) {\r\n                    minIndex = i;\r\n                    min = arr[i];\r\n                }\r\n            }\r\n\r\n            return minIndex;\r\n        };\r\n\r\n        tvLab.isEmpty = function (str) {\r\n            return ( !str || 0 === str.length );\r\n        };\r\n\r\n        tvLab.dropTypeOnClick = function () {\r\n            // Drops filters state and reloads\r\n            $('input#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.resetSet = function (tag) {\r\n            // Drops filters state, reloads, select new tag\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#set').val(\"c0d0s0a0t0v0\");\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        tvLab.urlVideo = function (param) {\r\n            // Select new video input param\r\n\r\n            var url = tvLab.nowUrl;\r\n            var Rgx = /(video=)(\\d*)/;\r\n\r\n            if (typeof param !== 'undefined') {\r\n\r\n                if (!url.match(Rgx)) {\r\n                    url = url + '&' + \"video=\" + param;\r\n                }\r\n\r\n                var newUrl = url.replace(Rgx, \"$1\" + param);\r\n                window.history.pushState(\"\", \"\", \"?\" + newUrl);\r\n                tvLab.nowUrl = newUrl;\r\n                return newUrl;\r\n\r\n            } else {\r\n\r\n                //--Shows URLs video param\r\n                var Rslt = \"\";\r\n                if (Rslt = url.match(Rgx)) {\r\n                    if (!tvLab.isEmpty(Rslt[2])) {\r\n                        return Rslt[2];\r\n                    } else {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        tvLab.loadVideoOnClick = function (id, thisObj) {\r\n            // Load Video On Click + some actions on this event\r\n            // Update Video Input param\r\n            tvLab.urlVideo(id);\r\n\r\n            // Update Video Input param\r\n            $('input#InputVideo').val(id);\r\n\r\n            // Update Logo Button\r\n            //$('.tpLogo').html('<a href=\"?video=' + id + '\"></a>');\r\n\r\n            // Update Item Box Here class\r\n            $(\"div.item.here\").removeClass(\"here\");\r\n            $(thisObj).parent().parent().addClass(\"here\");\r\n\r\n            //Load Video\r\n            tvLab.loadVideoOnPage(id);\r\n        };\r\n\r\n        /**\r\n         * Video display Tag here highlight when entire document ready */\r\n\r\n        var tags_arr = tvLab.nowTags.split(' ');\r\n        $.each(tags_arr, function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        /**\r\n         * AdjustH1InfoOutput Line */\r\n        //-- Remove tag on x click\r\n        $(\"div#main-output > h1.state-info > span.Tags > span.tag span.x-close\")\r\n            .on(\"click\", function (event) {\r\n\r\n                // Recognize tag text\r\n                var TagText = $(this).parent().text();\r\n                TagText = TagText.replace(\"⨯\", \"\");\r\n                TagText = TagText.replace(\"# \", \"\");\r\n\r\n                // Remove tag\r\n                $(\"ul.top-panel__search-field\").tagit(\"removeTagByLabel\", TagText);\r\n\r\n                // Remove div tag\r\n                $(this).parent().fadeOut(200, function () {\r\n                    TagText.remove();\r\n                });\r\n                // Submit with delay\r\n                setTimeout(function () {\r\n                    $('#top-panel__search').submit();\r\n                }, 100);\r\n            });\r\n\r\n\r\n        /**\r\n         * Video display tag click event */\r\n\r\n        $(document).on('click', 'a.tag', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n        // Tags overview Tag click event\r\n        $(document).on('click', 'a.tag-item', function (event) {\r\n            event.preventDefault();\r\n            var tag = $(event.target).data('tag');\r\n            $(\"ul.top-panel__search-field\").tagit(\"removeAll\");\r\n            $(\"ul.top-panel__search-field\").tagit(\"createTag\", tag);\r\n            // $('input#InputVideo').val(\"\"); // Drop displayed video to \"\"\r\n            $('#top-panel__search').submit();\r\n        });\r\n\r\n\r\n        /**\r\n         *  Accordion Left Panel with Tags overview\r\n         *  Tag \"here\" highlighted with entire document */\r\n\r\n        $.each(tvLab.nowTags.split(' '), function (index, value) {\r\n            $('a.tag-item[data-tag=' + value + ']').addClass(\"here\");\r\n        });\r\n\r\n\r\n        // tvLab.menuState = 3; // is works\r\n        // let menuState = document.cookie[document.cookie.length-1];\r\n        // COOKIE NOT WORKING WITH ACCORDION\r\n\r\n        $(\"aside#left-panel div.accordion\").accordion({\r\n            collapsible: true,\r\n            active: tvLab.menuState,\r\n            heightStyle: \"content\",\r\n\r\n            create: function (event, ui) {\r\n                $('aside#left-panel div.accordion').css(\"display\", \"block\");\r\n                // console.log('accordion create: '+ $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\"), tvLab.menuState);\r\n            },\r\n\r\n            activate: function (event, ui) {\r\n                var tagMenuActive = $(\"aside#left-panel div.accordion\").accordion(\"option\", \"active\");\r\n                document.cookie = \"TagMenuState=\" + tagMenuActive;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        $('#container').waterfall({\r\n            itemCls: 'item',\r\n            fitWidth: false,\r\n            colWidth: 319,\r\n            gutterWidth: 19,\r\n            gutterHeight: 15,\r\n            align: 'center',\r\n            minCol: 1,\r\n            maxCol: 3,\r\n            debug: false,\r\n            checkImagesLoaded: false,\r\n            callbacks: {\r\n\r\n                loadingFinished: function ($loading, isBeyondMaxPage) {\r\n\r\n                    !isBeyondMaxPage ? $loading.fadeOut() : $loading.remove();\r\n\r\n                    //-- Check for not selected video\r\n                    if (tvLab.urlVideo() === undefined) { // If url video param does not exist\r\n                        if ($(\".waterfall-container .item.here\").length === 0) { // if .box.here does not exist too\r\n                            $(\".waterfall-container .item:first-child\").addClass(\"here\"); // add class to first one\r\n                        }\r\n                    }\r\n\r\n                    $(document).on('click', '.waterfall-container a.wf-load-video', function (event) {\r\n                        event.preventDefault();\r\n                        tvLab.loadVideoOnClick($(this).data('id'), $(this));\r\n                    });\r\n\r\n                },\r\n                renderData: function (data, dataType) {\r\n\r\n                    if (data.pages === data.page) {\r\n                        $('#container').waterfall('pause', function () {\r\n                            $('#waterfall-message').html('<!--No more result from database-->')\r\n                        });\r\n                    }\r\n\r\n                    if (!tvLab.nowVid) {\r\n                        if (data.page === 1) {\r\n                            tvLab.loadVideoOnPage( data.FirstVideo );\r\n                        }\r\n                    }\r\n\r\n                    if (dataType === 'json' || dataType === 'jsonp') {\r\n                        // json or jsonp format\r\n                        var tpl = $('#waterfall-tpl').html();\r\n                        var template = Handlebars.compile(tpl);\r\n                        return template(data);\r\n                    } else {\r\n                        // html format\r\n                        return data;\r\n                    }\r\n\r\n                }\r\n            },\r\n            path: function (page) {\r\n                return 'desktop/json/waterfall_page.php?'+tvLab.nowUrl+'&page=' + page;\r\n            }\r\n        });\r\n\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./desktop/js/static/desktop.js","\r\n//------------------------------------------------------------------------------------\r\n// Top panel\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Filter Buttons Assemble\r\n\r\n        var mQ;\r\n\r\n        // screw-default-buttons init\r\n        $('input:radio').screwDefaultButtons({\r\n            image: 'url(\"img/radioSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        $('input:checkbox').screwDefaultButtons({\r\n            image: 'url(\"img/checkboxSmall.jpg\")',\r\n            width: 40,\r\n            height: 40\r\n        });\r\n\r\n        // Hide before build completely\r\n        $('.top-panel__search-filters_fixwrap').css(\"display\", \"block\");\r\n\r\n        // Sync with php passed url 'set code'\r\n        tvLab.nowSet.match(/[\\d\\w]{12}/) ? mQ = tvLab.nowSet : mQ = \"c0d0s0a0t0v0\";\r\n\r\n        // Shorthand for submit\r\n        tvLab.mqSetSubmit = function () {\r\n            $('#set').val(mQ);\r\n            $('#top-panel__search').submit();\r\n        };\r\n\r\n        // Check the 'chk' in form, if so -- changing filter code mQ\r\n        $('#comp')[0].checked === true ? mQ = mQ.replace(/c0/, 'c1') : null;\r\n        $('#3d')[0].checked === true ? mQ = mQ.replace(/d0/, 'd1') : null;\r\n        $('#sim')[0].checked === true ? mQ = mQ.replace(/s0/, 's1') : null;\r\n        $('#anim')[0].checked === true ? mQ = mQ.replace(/a0/, 'a1') : null;\r\n        $('#stpm')[0].checked === true ? mQ = mQ.replace(/t0/, 't1') : null;\r\n        $('#vid')[0].checked === true ? mQ = mQ.replace(/v0/, 'v1') : null;\r\n\r\n        // Event Callbacks\r\n        $('.styledCheckbox:has(#md)').on('click', function () {\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#comp)').on('click', function () {\r\n            if ($('#comp').is(':checked')) {\r\n                if (!mQ.match(/c1/)) {\r\n                    mQ = mQ.replace(/c0/, 'c1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/c0/)) {\r\n                    mQ = mQ.replace(/c1/, 'c0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#3d)').on('click', function () {\r\n            if ($('#3d').is(':checked')) {\r\n                if (!mQ.match(/d1/)) {\r\n                    mQ = mQ.replace(/d0/, 'd1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/d0/)) {\r\n                    mQ = mQ.replace(/d1/, 'd0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#sim)').on('click', function () {\r\n            if ($('#sim').is(':checked')) {\r\n                if (!mQ.match(/s1/)) {\r\n                    mQ = mQ.replace(/s0/, 's1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/s0/)) {\r\n                    mQ = mQ.replace(/s1/, 's0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#anim)').on('click', function () {\r\n            if ($('#anim').is(':checked')) {\r\n                if (!mQ.match(/a1/)) {\r\n                    mQ = mQ.replace(/a0/, 'a1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/a0/)) {\r\n                    mQ = mQ.replace(/a1/, 'a0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#stpm)').on('click', function () {\r\n            if ($('#stpm').is(':checked')) {\r\n                if (!mQ.match(/t1/)) {\r\n                    mQ = mQ.replace(/t0/, 't1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/t0/)) {\r\n                    mQ = mQ.replace(/t1/, 't0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n        $('.styledCheckbox:has(#vid)').on('click', function () {\r\n            if ($('#vid').is(':checked')) {\r\n                if (!mQ.match(/v1/)) {\r\n                    mQ = mQ.replace(/v0/, 'v1')\r\n                }\r\n            } else {\r\n                if (!mQ.match(/v0/)) {\r\n                    mQ = mQ.replace(/v1/, 'v0')\r\n                }\r\n            }\r\n            tvLab.mqSetSubmit();\r\n        });\r\n\r\n\r\n        //------------------------------------------------------------------------------------\r\n        // Tagit auto complete. top panel input area\r\n\r\n        tvLab.sampleTags = ['realism', 'abstract', 'minimalism', 'futurism', 'surrealism', 'contemporary', 'cinematic', 'Cartoon', 'Art', 'Beauty', 'Adventures', 'Story', 'Fantasy', 'Spiritual', 'Culture', 'Sport', 'Games', 'Enertament', 'Mans', 'Womens', 'Comedy', 'Show', 'Cinema', 'Fun', 'Weird', 'News', 'Info', 'Promo', 'Test', 'Science', 'Education', 'History', 'Political', 'Social', 'Nature', 'Health', 'Industry', 'Buisness', 'Finance', 'Services', 'Vehicles', 'Technology', 'Digital', 'CG', 'Crafts', 'War', 'Criminal'];\r\n\r\n        //-------------------------------\r\n        // Single field\r\n        //-------------------------------\r\n        $('ul.top-panel__search-field').tagit({\r\n            showAutocompleteOnFocus: false,\r\n            autocomplete: {delay: 0, minLength: 0},\r\n            tagLimit: 3,\r\n            availableTags: tvLab.sampleTags,\r\n            singleField: true,\r\n            singleFieldNode: $('input.top-panel__search-field'),\r\n            afterTagRemoved: function (evt, ui) {\r\n                //document.getElementById(\"top-panel__search\").submit();\r\n            }\r\n\r\n        });\r\n\r\n        //-------------------------------\r\n        // Preloading data in markup\r\n        //-------------------------------\r\n        $('#myULTags').tagit({\r\n            availableTags: tvLab.sampleTags, // this param is of course optional. it's for autocomplete.\r\n            // configure the name of the input field (will be submitted with form), default: item[tags]\r\n            itemName: 'item',\r\n            fieldName: 'tags'\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag events\r\n        //-------------------------------\r\n        tvLab.eventTags = $('#eventTags');\r\n\r\n        tvLab.addEvent = function (text) {\r\n            $('#events_container').append(text + '<br>');\r\n        };\r\n\r\n        tvLab.eventTags.tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            beforeTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('beforeTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            afterTagAdded: function (evt, ui) {\r\n                if (!ui.duringInitialization) {\r\n                    tvLab.addEvent('afterTagAdded: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n                }\r\n            },\r\n            beforeTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('beforeTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            afterTagRemoved: function (evt, ui) {\r\n                tvLab.addEvent('afterTagRemoved: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagClicked: function (evt, ui) {\r\n                tvLab.addEvent('onTagClicked: ' + tvLab.eventTags.tagit('tagLabel', ui.tag));\r\n            },\r\n            onTagExists: function (evt, ui) {\r\n                tvLab.addEvent('onTagExists: ' + tvLab.eventTags.tagit('tagLabel', ui.existingTag));\r\n            }\r\n        });\r\n\r\n        //-------------------------------\r\n        // Read-only\r\n        //-------------------------------\r\n        $('#readOnlyTags').tagit({\r\n            readOnly: false\r\n        });\r\n\r\n        //-------------------------------\r\n        // Tag-it methods\r\n        //-------------------------------\r\n        $('#methodTags').tagit({\r\n            availableTags: tvLab.sampleTags\r\n        });\r\n\r\n        //-------------------------------\r\n        // Allow spaces without quotes.\r\n        //-------------------------------\r\n        $('#allowSpacesTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            allowSpaces: true\r\n        });\r\n\r\n        //-------------------------------\r\n        // Remove confirmation\r\n        //-------------------------------\r\n        $('#removeConfirmationTags').tagit({\r\n            availableTags: tvLab.sampleTags,\r\n            removeConfirmation: true\r\n        });\r\n\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./desktop/js/static/top-panel.js","\r\n//------------------------------------------------------------------------------------\r\n// Television Lab Player link with waterfall output grid: prev/next video bond ability\r\nmodule.exports = function() {\r\n    $(document).ready(function () {\r\n        // References for Vimeo Player API\r\n        // https://github.com/vimeo/player.js\r\n\r\n        tvLab.setAutoPlayUI = function (type) { // \"Cycle\" or \"Next\"\r\n            var AutoPlayButton = $(\"div#MPC div.AutoPlay\");\r\n\r\n            if (type === \"Next\") {\r\n                AutoPlayButton.removeClass(\"Cycle\");\r\n                AutoPlayButton.addClass(\"Next\");\r\n            } else if (type === \"Cycle\") {\r\n                AutoPlayButton.removeClass(\"Next\");\r\n                AutoPlayButton.addClass(\"Cycle\");\r\n            }\r\n        };\r\n\r\n        tvLab.videoGoAndPlay = function (state) {\r\n            var this_Vid_Obj = $(\"#container.waterfall-container div.item.here\");\r\n            var first_Vid_Obj = $(\"#container.waterfall-container\").children().first();\r\n            var next_Vid_Obj = this_Vid_Obj.next();\r\n            var prev_Vid_Obj = this_Vid_Obj.prev();\r\n            var next_Vid_Id = next_Vid_Obj.data(\"id\");\r\n            var prev_Vid_Id = prev_Vid_Obj.data(\"id\");\r\n\r\n            if (state === \"Next\") {\r\n                if (typeof next_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    next_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(next_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n\r\n            if (state === \"Prev\") {\r\n                if (typeof prev_Vid_Id !== 'undefined') {\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    prev_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(prev_Vid_Id);\r\n                } else {\r\n                    // If no data-id then drop .here class to the first element\r\n                    this_Vid_Obj.removeClass(\"here\");\r\n                    first_Vid_Obj.addClass(\"here\");\r\n                    tvLab.loadVideoOnPage(first_Vid_Obj.data(\"id\"));\r\n                }\r\n            }\r\n        };\r\n\r\n        /* Desktop player listeners extends Main Player */\r\n        $(document).on('click', 'div#MPC div#NextVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Next\");\r\n        });\r\n\r\n        $(document).on('click', 'div#MPC div#PrevVideo', function (event) {\r\n            event.preventDefault();\r\n            tvLab.videoGoAndPlay(\"Prev\");\r\n        });\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./desktop/js/static/main-player.js"],"sourceRoot":""}